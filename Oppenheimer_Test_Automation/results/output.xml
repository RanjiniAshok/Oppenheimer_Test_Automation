<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.4 on win32)" generated="20220606 08:54:50.260" rpa="false" schemaversion="3">
<suite id="s1" name="Oppenheimer">
<suite id="s1-s1" name="Oppenheimer API GetTaxRelief" source="R:\pythonProject\Oppenheimer_Test_Automation\Oppenheimer_Test_Automation\testcases\Oppenheimer_API_GetTaxRelief.robot">
<kw name="Create Session" library="RequestsLibrary" type="SETUP">
<arg>Oppenheimer</arg>
<arg>http://localhost:8080</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220606 08:54:50.953" level="INFO">Creating Session using : alias=Oppenheimer, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:50.953"/>
</kw>
<test id="s1-s1-t1" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC01</arg>
<arg>This testcase to verify the tax relief Amount returned less than 50</arg>
<arg>01012005</arg>
<arg>m</arg>
<arg>TestRecord 0401</arg>
<arg>Y123B789Z</arg>
<arg>100</arg>
<arg>8</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:50.953" level="INFO">${data} = {"birthday":"01012005","gender":"m","name":"TestRecord 0401","natid":"Y123B789Z","salary":"100","tax":"8"}</msg>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:50.953"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:50.985" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:50.985" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:50.985" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:50.985"/>
</kw>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:50.985"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:50.985" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:50.985" endtime="20220606 08:54:50.985"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.001" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body={"birthday":"01012005","gender":"m","name":"TestRecord 0401","natid":"Y123B789Z","salary":"100","tax":"8"} 
 </msg>
<msg timestamp="20220606 08:54:51.001" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.001" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:50.985" endtime="20220606 08:54:51.001"/>
</kw>
<msg timestamp="20220606 08:54:51.001" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.001" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:50.985" endtime="20220606 08:54:51.001"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.001" endtime="20220606 08:54:51.001"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.001" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.001" endtime="20220606 08:54:51.001"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.001" level="INFO">17
17
17
92.00</msg>
<msg timestamp="20220606 08:54:51.001" level="INFO">${exp_calculated_taxRelief} = 92.00</msg>
<status status="PASS" starttime="20220606 08:54:51.001" endtime="20220606 08:54:51.001"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.001" level="INFO">${exp_National_ID} = Y123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.001" endtime="20220606 08:54:51.001"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.001" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.001" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"Y123$$$$$","name":"TestRecord 0401","relief":"92.00"}] 
 </msg>
<msg timestamp="20220606 08:54:51.001" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.001" endtime="20220606 08:54:51.001"/>
</kw>
<msg timestamp="20220606 08:54:51.001" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.001" level="INFO">${actual_resp_get_content} = [{"natid":"Y123$$$$$","name":"TestRecord 0401","relief":"92.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.001" endtime="20220606 08:54:51.001"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.016" level="INFO">${act_resp_name} = ['TestRecord 0401']</msg>
<status status="PASS" starttime="20220606 08:54:51.001" endtime="20220606 08:54:51.016"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.032" level="INFO">${act_resp_nationalID} = ['Y123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.016" endtime="20220606 08:54:51.032"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.048" level="INFO">${act_resp_TaxRelief} = ['92.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.032" endtime="20220606 08:54:51.048"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.048" endtime="20220606 08:54:51.048"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.048" endtime="20220606 08:54:51.048"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.048" endtime="20220606 08:54:51.048"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.048" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.048" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"92.00"} 
 </msg>
<msg timestamp="20220606 08:54:51.048" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.048" endtime="20220606 08:54:51.048"/>
</kw>
<msg timestamp="20220606 08:54:51.048" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.048" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"92.00"}</msg>
<status status="PASS" starttime="20220606 08:54:51.048" endtime="20220606 08:54:51.048"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.079" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:51.048" endtime="20220606 08:54:51.079"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.084" level="INFO">${act_resp_totalTaxRelief} = ['92.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.079" endtime="20220606 08:54:51.084"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.084" endtime="20220606 08:54:51.084"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.084" endtime="20220606 08:54:51.084"/>
</kw>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:51.084"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.084" endtime="20220606 08:54:51.084"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.084" endtime="20220606 08:54:51.084"/>
</branch>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:51.084"/>
</if>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:51.084"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:50.953" endtime="20220606 08:54:51.095"/>
</test>
<test id="s1-s1-t2" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC02</arg>
<arg>This testcase to verify the tax relief Amount for male whose Salary and Tax paid is zero</arg>
<arg>01012005</arg>
<arg>m</arg>
<arg>TestRecord 0402</arg>
<arg>K123B789K</arg>
<arg>1</arg>
<arg>0.01</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.099" level="INFO">${data} = {"birthday":"01012005","gender":"m","name":"TestRecord 0402","natid":"K123B789K","salary":"1","tax":"0.01"}</msg>
<status status="PASS" starttime="20220606 08:54:51.099" endtime="20220606 08:54:51.099"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.103" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.099" endtime="20220606 08:54:51.103"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.099" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.103" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.103" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body={"birthday":"01012005","gender":"m","name":"TestRecord 0402","natid":"K123B789K","salary":"1","tax":"0.01"} 
 </msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<msg timestamp="20220606 08:54:51.103" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.103" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.103" level="INFO">17
17
17
0.99
50.00</msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">${exp_calculated_taxRelief} = 50.00</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.103" level="INFO">${exp_National_ID} = K123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.103" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"K123$$$$$","name":"TestRecord 0402","relief":"50.00"}] 
 </msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<msg timestamp="20220606 08:54:51.103" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.103" level="INFO">${actual_resp_get_content} = [{"natid":"K123$$$$$","name":"TestRecord 0402","relief":"50.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.103"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.119" level="INFO">${act_resp_name} = ['TestRecord 0402']</msg>
<status status="PASS" starttime="20220606 08:54:51.103" endtime="20220606 08:54:51.119"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.135" level="INFO">${act_resp_nationalID} = ['K123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.119" endtime="20220606 08:54:51.135"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.151" level="INFO">${act_resp_TaxRelief} = ['50.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.135" endtime="20220606 08:54:51.151"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.151" endtime="20220606 08:54:51.151"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.151" endtime="20220606 08:54:51.151"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.151" endtime="20220606 08:54:51.151"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.151" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.151" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"50.00"} 
 </msg>
<msg timestamp="20220606 08:54:51.151" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.151" endtime="20220606 08:54:51.151"/>
</kw>
<msg timestamp="20220606 08:54:51.151" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.151" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"50.00"}</msg>
<status status="PASS" starttime="20220606 08:54:51.151" endtime="20220606 08:54:51.151"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.166" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:51.151" endtime="20220606 08:54:51.166"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.182" level="INFO">${act_resp_totalTaxRelief} = ['50.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.166" endtime="20220606 08:54:51.182"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.182" endtime="20220606 08:54:51.182"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.182" endtime="20220606 08:54:51.182"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.098" endtime="20220606 08:54:51.182"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.182" endtime="20220606 08:54:51.182"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.182" endtime="20220606 08:54:51.182"/>
</branch>
<status status="PASS" starttime="20220606 08:54:51.098" endtime="20220606 08:54:51.182"/>
</if>
<status status="PASS" starttime="20220606 08:54:51.098" endtime="20220606 08:54:51.185"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:51.096" endtime="20220606 08:54:51.185"/>
</test>
<test id="s1-s1-t3" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC03</arg>
<arg>This testcase to verify the tax relief Amount for female whose Salary and Tax paid is zero</arg>
<arg>01012005</arg>
<arg>F</arg>
<arg>TestRecord 0403</arg>
<arg>Z123B789L</arg>
<arg>1</arg>
<arg>0.01</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.185" level="INFO">${data} = {"birthday":"01012005","gender":"F","name":"TestRecord 0403","natid":"Z123B789L","salary":"1","tax":"0.01"}</msg>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.185"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.185" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.185" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.185" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.185"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.185"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.185" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.185"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.198" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body={"birthday":"01012005","gender":"F","name":"TestRecord 0403","natid":"Z123B789L","salary":"1","tax":"0.01"} 
 </msg>
<msg timestamp="20220606 08:54:51.198" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.198" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.198"/>
</kw>
<msg timestamp="20220606 08:54:51.198" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.198" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.198"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.198" endtime="20220606 08:54:51.198"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.198" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.198" endtime="20220606 08:54:51.198"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.198" level="INFO">17
17
17
500.99</msg>
<msg timestamp="20220606 08:54:51.198" level="INFO">${exp_calculated_taxRelief} = 500.99</msg>
<status status="PASS" starttime="20220606 08:54:51.198" endtime="20220606 08:54:51.198"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.198" level="INFO">${exp_National_ID} = Z123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.198" endtime="20220606 08:54:51.198"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.198" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.198" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"Z123$$$$$","name":"TestRecord 0403","relief":"500.99"}] 
 </msg>
<msg timestamp="20220606 08:54:51.198" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.198" endtime="20220606 08:54:51.198"/>
</kw>
<msg timestamp="20220606 08:54:51.198" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.198" level="INFO">${actual_resp_get_content} = [{"natid":"Z123$$$$$","name":"TestRecord 0403","relief":"500.99"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.198" endtime="20220606 08:54:51.198"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.214" level="INFO">${act_resp_name} = ['TestRecord 0403']</msg>
<status status="PASS" starttime="20220606 08:54:51.198" endtime="20220606 08:54:51.214"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.230" level="INFO">${act_resp_nationalID} = ['Z123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.214" endtime="20220606 08:54:51.230"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.230" level="INFO">${act_resp_TaxRelief} = ['500.99']</msg>
<status status="PASS" starttime="20220606 08:54:51.230" endtime="20220606 08:54:51.230"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.230" endtime="20220606 08:54:51.230"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.230" endtime="20220606 08:54:51.230"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.230" endtime="20220606 08:54:51.230"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.245" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.245" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"500.99"} 
 </msg>
<msg timestamp="20220606 08:54:51.245" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.230" endtime="20220606 08:54:51.245"/>
</kw>
<msg timestamp="20220606 08:54:51.245" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.245" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"500.99"}</msg>
<status status="PASS" starttime="20220606 08:54:51.230" endtime="20220606 08:54:51.245"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.261" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:51.245" endtime="20220606 08:54:51.261"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.276" level="INFO">${act_resp_totalTaxRelief} = ['500.99']</msg>
<status status="PASS" starttime="20220606 08:54:51.261" endtime="20220606 08:54:51.276"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.276" endtime="20220606 08:54:51.276"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.276" endtime="20220606 08:54:51.276"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.276"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.276" endtime="20220606 08:54:51.276"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.276" endtime="20220606 08:54:51.276"/>
</branch>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.276"/>
</if>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.276"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:51.185" endtime="20220606 08:54:51.276"/>
</test>
<test id="s1-s1-t4" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC04</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 17 years</arg>
<arg>01012005</arg>
<arg>m</arg>
<arg>TestRecord 0404</arg>
<arg>A123B789Z</arg>
<arg>1234567.89</arg>
<arg>820</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.285" level="INFO">${data} = {"birthday":"01012005","gender":"m","name":"TestRecord 0404","natid":"A123B789Z","salary":"1234567.89","tax":"820"}</msg>
<status status="PASS" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.285"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.285" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.285" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.285" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.285"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.285"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.285" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.285"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.293" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body={"birthday":"01012005","gender":"m","name":"TestRecord 0404","natid":"A123B789Z","salary":"1234567.89","tax":"820"} 
 </msg>
<msg timestamp="20220606 08:54:51.293" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.293" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.293"/>
</kw>
<msg timestamp="20220606 08:54:51.293" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.293" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.293"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.293" endtime="20220606 08:54:51.293"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.293" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.293" endtime="20220606 08:54:51.293"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.293" level="INFO">17
17
17
1233748.00</msg>
<msg timestamp="20220606 08:54:51.293" level="INFO">${exp_calculated_taxRelief} = 1233748.00</msg>
<status status="PASS" starttime="20220606 08:54:51.293" endtime="20220606 08:54:51.293"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.293" level="INFO">${exp_National_ID} = A123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.293" endtime="20220606 08:54:51.293"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.293" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.293" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"A123$$$$$","name":"TestRecord 0404","relief":"1233747.89"}] 
 </msg>
<msg timestamp="20220606 08:54:51.293" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.293" endtime="20220606 08:54:51.293"/>
</kw>
<msg timestamp="20220606 08:54:51.293" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.293" level="INFO">${actual_resp_get_content} = [{"natid":"A123$$$$$","name":"TestRecord 0404","relief":"1233747.89"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.293" endtime="20220606 08:54:51.293"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.309" level="INFO">${act_resp_name} = ['TestRecord 0404']</msg>
<status status="PASS" starttime="20220606 08:54:51.293" endtime="20220606 08:54:51.309"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.325" level="INFO">${act_resp_nationalID} = ['A123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.309" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.325" level="INFO">${act_resp_TaxRelief} = ['1233747.89']</msg>
<status status="PASS" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.325" level="FAIL">1233748.00 != 1233747.89</msg>
<status status="FAIL" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.325"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.325"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.340"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.325" endtime="20220606 08:54:51.340"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:51.285" endtime="20220606 08:54:51.340"/>
</if>
<status status="FAIL" starttime="20220606 08:54:51.276" endtime="20220606 08:54:51.340"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:51.276" endtime="20220606 08:54:51.340">1233748.00 != 1233747.89</status>
</test>
<test id="s1-s1-t5" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC05</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 18 years</arg>
<arg>30092003</arg>
<arg>m</arg>
<arg>TestRecord 0405</arg>
<arg>B123l789Y</arg>
<arg>200000</arg>
<arg>1500.23</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.340" level="INFO">${data} = {"birthday":"30092003","gender":"m","name":"TestRecord 0405","natid":"B123l789Y","salary":"200000","tax":"1500.23"}</msg>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.340"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.340" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.340" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.340" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.340"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.340"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.340" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.340"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.356" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body={"birthday":"30092003","gender":"m","name":"TestRecord 0405","natid":"B123l789Y","salary":"200000","tax":"1500.23"} 
 </msg>
<msg timestamp="20220606 08:54:51.356" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.356" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.356"/>
</kw>
<msg timestamp="20220606 08:54:51.356" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.356" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.356"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.356" endtime="20220606 08:54:51.356"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.356" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.356" endtime="20220606 08:54:51.356"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.356" level="INFO">18
18
18
198499.77</msg>
<msg timestamp="20220606 08:54:51.356" level="INFO">${exp_calculated_taxRelief} = 198499.77</msg>
<status status="PASS" starttime="20220606 08:54:51.356" endtime="20220606 08:54:51.356"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.356" level="INFO">${exp_National_ID} = B123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.356" endtime="20220606 08:54:51.356"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.356" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.356" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"B123$$$$$","name":"TestRecord 0405","relief":"198499.77"}] 
 </msg>
<msg timestamp="20220606 08:54:51.356" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.356" endtime="20220606 08:54:51.356"/>
</kw>
<msg timestamp="20220606 08:54:51.356" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.356" level="INFO">${actual_resp_get_content} = [{"natid":"B123$$$$$","name":"TestRecord 0405","relief":"198499.77"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.356" endtime="20220606 08:54:51.356"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.371" level="INFO">${act_resp_name} = ['TestRecord 0405']</msg>
<status status="PASS" starttime="20220606 08:54:51.356" endtime="20220606 08:54:51.371"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.388" level="INFO">${act_resp_nationalID} = ['B123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.371" endtime="20220606 08:54:51.388"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.388" level="INFO">${act_resp_TaxRelief} = ['198499.77']</msg>
<status status="PASS" starttime="20220606 08:54:51.388" endtime="20220606 08:54:51.388"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.388" endtime="20220606 08:54:51.388"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.388" endtime="20220606 08:54:51.388"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.388" endtime="20220606 08:54:51.388"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.407" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.407" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"198499.77"} 
 </msg>
<msg timestamp="20220606 08:54:51.407" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.388" endtime="20220606 08:54:51.407"/>
</kw>
<msg timestamp="20220606 08:54:51.407" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.407" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"198499.77"}</msg>
<status status="PASS" starttime="20220606 08:54:51.388" endtime="20220606 08:54:51.407"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.407" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:51.407" endtime="20220606 08:54:51.407"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.423" level="INFO">${act_resp_totalTaxRelief} = ['198499.77']</msg>
<status status="PASS" starttime="20220606 08:54:51.407" endtime="20220606 08:54:51.423"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.423"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.423"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.423"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.423"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.423"/>
</branch>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.423"/>
</if>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.423"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:51.340" endtime="20220606 08:54:51.423"/>
</test>
<test id="s1-s1-t6" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC06</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 34 years</arg>
<arg>09111987</arg>
<arg>M</arg>
<arg>TestRecord 0406</arg>
<arg>C123B789X</arg>
<arg>30000</arg>
<arg>2501</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.423" level="INFO">${data} = {"birthday":"09111987","gender":"M","name":"TestRecord 0406","natid":"C123B789X","salary":"30000","tax":"2501"}</msg>
<status status="PASS" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.423"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.438" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.438" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.438" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.438"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.438"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.438" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.438"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.438" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body={"birthday":"09111987","gender":"M","name":"TestRecord 0406","natid":"C123B789X","salary":"30000","tax":"2501"} 
 </msg>
<msg timestamp="20220606 08:54:51.438" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.438" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.438"/>
</kw>
<msg timestamp="20220606 08:54:51.438" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.438" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.438"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.438"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.438" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.438"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.438" level="INFO">34
34
34
21999.20</msg>
<msg timestamp="20220606 08:54:51.438" level="INFO">${exp_calculated_taxRelief} = 21999.20</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.438"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.438" level="INFO">${exp_National_ID} = C123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.438"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.454" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.454" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"C123$$$$$","name":"TestRecord 0406","relief":"21999.00"}] 
 </msg>
<msg timestamp="20220606 08:54:51.454" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.454"/>
</kw>
<msg timestamp="20220606 08:54:51.454" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.454" level="INFO">${actual_resp_get_content} = [{"natid":"C123$$$$$","name":"TestRecord 0406","relief":"21999.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.438" endtime="20220606 08:54:51.454"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.454" level="INFO">${act_resp_name} = ['TestRecord 0406']</msg>
<status status="PASS" starttime="20220606 08:54:51.454" endtime="20220606 08:54:51.454"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.470" level="INFO">${act_resp_nationalID} = ['C123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.454" endtime="20220606 08:54:51.470"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.485" level="INFO">${act_resp_TaxRelief} = ['21999.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.470" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.485" level="FAIL">21999.20 != 21999.00</msg>
<status status="FAIL" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.485"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.485"/>
</if>
<status status="FAIL" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.485"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:51.423" endtime="20220606 08:54:51.485">21999.20 != 21999.00</status>
</test>
<test id="s1-s1-t7" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC07</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 35 years</arg>
<arg>21101986</arg>
<arg>m</arg>
<arg>TestRecord 0407</arg>
<arg>D123O789M</arg>
<arg>40000</arg>
<arg>3500.1</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.485" level="INFO">${data} = {"birthday":"21101986","gender":"m","name":"TestRecord 0407","natid":"D123O789M","salary":"40000","tax":"3500.1"}</msg>
<status status="PASS" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.485"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.501" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.501"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.501" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.501" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body={"birthday":"21101986","gender":"m","name":"TestRecord 0407","natid":"D123O789M","salary":"40000","tax":"3500.1"} 
 </msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<msg timestamp="20220606 08:54:51.501" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.501" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.501" level="INFO">35
35
35
29199.92</msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">${exp_calculated_taxRelief} = 29199.92</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.501" level="INFO">${exp_National_ID} = D123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.501" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"D123$$$$$","name":"TestRecord 0407","relief":"29199.93"}] 
 </msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<msg timestamp="20220606 08:54:51.501" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.501" level="INFO">${actual_resp_get_content} = [{"natid":"D123$$$$$","name":"TestRecord 0407","relief":"29199.93"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.501" endtime="20220606 08:54:51.501"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.516" level="INFO">${act_resp_name} = ['TestRecord 0407']</msg>
<status status="PASS" starttime="20220606 08:54:51.516" endtime="20220606 08:54:51.516"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.532" level="INFO">${act_resp_nationalID} = ['D123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.516" endtime="20220606 08:54:51.532"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.548" level="INFO">${act_resp_TaxRelief} = ['29199.93']</msg>
<status status="PASS" starttime="20220606 08:54:51.532" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.548" level="FAIL">29199.92 != 29199.93</msg>
<status status="FAIL" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.548"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.548"/>
</if>
<status status="FAIL" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.548"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:51.485" endtime="20220606 08:54:51.548">29199.92 != 29199.93</status>
</test>
<test id="s1-s1-t8" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC08</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 49 years</arg>
<arg>19101972</arg>
<arg>m</arg>
<arg>TestRecord 0408</arg>
<arg>E123X789N</arg>
<arg>500000</arg>
<arg>4500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.548" level="INFO">${data} = {"birthday":"19101972","gender":"m","name":"TestRecord 0408","natid":"E123X789N","salary":"500000","tax":"4500"}</msg>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.548" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.548" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.548" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.548"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.563" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.563" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"19101972","gender":"m","name":"TestRecord 0408","natid":"E123X789N","salary":"500000","tax":"4500"} 
 </msg>
<msg timestamp="20220606 08:54:51.563" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.563" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<msg timestamp="20220606 08:54:51.563" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.563" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.563"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.563" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.563" level="INFO">49
49
49
247750.00</msg>
<msg timestamp="20220606 08:54:51.563" level="INFO">${exp_calculated_taxRelief} = 247750.00</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.563" level="INFO">${exp_National_ID} = E123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.563" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.563" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"E123$$$$$","name":"TestRecord 0408","relief":"247750.00"}] 
 </msg>
<msg timestamp="20220606 08:54:51.563" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<msg timestamp="20220606 08:54:51.563" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.563" level="INFO">${actual_resp_get_content} = [{"natid":"E123$$$$$","name":"TestRecord 0408","relief":"247750.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.563"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.585" level="INFO">${act_resp_name} = ['TestRecord 0408']</msg>
<status status="PASS" starttime="20220606 08:54:51.563" endtime="20220606 08:54:51.585"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.598" level="INFO">${act_resp_nationalID} = ['E123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.585" endtime="20220606 08:54:51.598"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.618" level="INFO">${act_resp_TaxRelief} = ['247750.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.598" endtime="20220606 08:54:51.618"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.618" endtime="20220606 08:54:51.618"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.618" endtime="20220606 08:54:51.618"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.618" endtime="20220606 08:54:51.618"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.618" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.618" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"247750.00"} 
 </msg>
<msg timestamp="20220606 08:54:51.618" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.618" endtime="20220606 08:54:51.618"/>
</kw>
<msg timestamp="20220606 08:54:51.618" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.618" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"247750.00"}</msg>
<status status="PASS" starttime="20220606 08:54:51.618" endtime="20220606 08:54:51.618"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.634" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:51.618" endtime="20220606 08:54:51.634"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.673" level="INFO">${act_resp_totalTaxRelief} = ['247750.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.634" endtime="20220606 08:54:51.673"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.673" endtime="20220606 08:54:51.673"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.673" endtime="20220606 08:54:51.673"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.673"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.673" endtime="20220606 08:54:51.673"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.673" endtime="20220606 08:54:51.673"/>
</branch>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.673"/>
</if>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.673"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:51.548" endtime="20220606 08:54:51.673"/>
</test>
<test id="s1-s1-t9" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC09</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 50 years</arg>
<arg>29081971</arg>
<arg>M</arg>
<arg>TestRecord 0409</arg>
<arg>F123T789O</arg>
<arg>600000.55</arg>
<arg>5500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.679" level="INFO">${data} = {"birthday":"29081971","gender":"M","name":"TestRecord 0409","natid":"F123T789O","salary":"600000.55","tax":"5500"}</msg>
<status status="PASS" starttime="20220606 08:54:51.678" endtime="20220606 08:54:51.679"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.681" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.681" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.681" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.679" endtime="20220606 08:54:51.681"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.679" endtime="20220606 08:54:51.681"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.681" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.681" endtime="20220606 08:54:51.681"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.685" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body={"birthday":"29081971","gender":"M","name":"TestRecord 0409","natid":"F123T789O","salary":"600000.55","tax":"5500"} 
 </msg>
<msg timestamp="20220606 08:54:51.685" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.685" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.681" endtime="20220606 08:54:51.685"/>
</kw>
<msg timestamp="20220606 08:54:51.685" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.685" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.681" endtime="20220606 08:54:51.685"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.685" endtime="20220606 08:54:51.685"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.685" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.685" endtime="20220606 08:54:51.685"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.685" level="INFO">50
50
50
297250.50</msg>
<msg timestamp="20220606 08:54:51.685" level="INFO">${exp_calculated_taxRelief} = 297250.50</msg>
<status status="PASS" starttime="20220606 08:54:51.685" endtime="20220606 08:54:51.685"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.685" level="INFO">${exp_National_ID} = F123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.685" endtime="20220606 08:54:51.685"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.685" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.685" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"F123$$$$$","name":"TestRecord 0409","relief":"297250.00"}] 
 </msg>
<msg timestamp="20220606 08:54:51.685" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.685" endtime="20220606 08:54:51.685"/>
</kw>
<msg timestamp="20220606 08:54:51.685" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.685" level="INFO">${actual_resp_get_content} = [{"natid":"F123$$$$$","name":"TestRecord 0409","relief":"297250.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.685" endtime="20220606 08:54:51.685"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.699" level="INFO">${act_resp_name} = ['TestRecord 0409']</msg>
<status status="PASS" starttime="20220606 08:54:51.685" endtime="20220606 08:54:51.699"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.719" level="INFO">${act_resp_nationalID} = ['F123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.699" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.719" level="INFO">${act_resp_TaxRelief} = ['297250.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.719" level="FAIL">297250.50 != 297250.00</msg>
<status status="FAIL" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:51.678" endtime="20220606 08:54:51.719"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.719" endtime="20220606 08:54:51.719"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:51.678" endtime="20220606 08:54:51.719"/>
</if>
<status status="FAIL" starttime="20220606 08:54:51.678" endtime="20220606 08:54:51.734"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:51.673" endtime="20220606 08:54:51.734">297250.50 != 297250.00</status>
</test>
<test id="s1-s1-t10" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC10</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 74 years</arg>
<arg>15081947</arg>
<arg>m</arg>
<arg>TestRecord 0410</arg>
<arg>G123B789P</arg>
<arg>700000</arg>
<arg>6500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.734" level="INFO">${data} = {"birthday":"15081947","gender":"m","name":"TestRecord 0410","natid":"G123B789P","salary":"700000","tax":"6500"}</msg>
<status status="PASS" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.734"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.734" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.734" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.734" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.734"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.734"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.734" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.734"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.734" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"15081947","gender":"m","name":"TestRecord 0410","natid":"G123B789P","salary":"700000","tax":"6500"} 
 </msg>
<msg timestamp="20220606 08:54:51.734" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.734" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.734"/>
</kw>
<msg timestamp="20220606 08:54:51.734" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.734" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.734"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.750"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.750" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.750" endtime="20220606 08:54:51.750"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.750" level="INFO">74
74
74
254514.50</msg>
<msg timestamp="20220606 08:54:51.750" level="INFO">${exp_calculated_taxRelief} = 254514.50</msg>
<status status="PASS" starttime="20220606 08:54:51.750" endtime="20220606 08:54:51.750"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.750" level="INFO">${exp_National_ID} = G123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.750" endtime="20220606 08:54:51.750"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.756" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.756" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"G123$$$$$","name":"TestRecord 0410","relief":"254514.00"}] 
 </msg>
<msg timestamp="20220606 08:54:51.756" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.750" endtime="20220606 08:54:51.756"/>
</kw>
<msg timestamp="20220606 08:54:51.756" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.756" level="INFO">${actual_resp_get_content} = [{"natid":"G123$$$$$","name":"TestRecord 0410","relief":"254514.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.750" endtime="20220606 08:54:51.756"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.777" level="INFO">${act_resp_name} = ['TestRecord 0410']</msg>
<status status="PASS" starttime="20220606 08:54:51.756" endtime="20220606 08:54:51.777"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.792" level="INFO">${act_resp_nationalID} = ['G123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.777" endtime="20220606 08:54:51.792"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.811" level="INFO">${act_resp_TaxRelief} = ['254514.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.792" endtime="20220606 08:54:51.811"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.811" endtime="20220606 08:54:51.811"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.813" endtime="20220606 08:54:51.813"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.814" level="FAIL">254514.50 != 254514.00</msg>
<status status="FAIL" starttime="20220606 08:54:51.813" endtime="20220606 08:54:51.814"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:51.814" endtime="20220606 08:54:51.814"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.814" endtime="20220606 08:54:51.814"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.814" endtime="20220606 08:54:51.814"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.814" endtime="20220606 08:54:51.814"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.814" endtime="20220606 08:54:51.814"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.814"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.814" endtime="20220606 08:54:51.814"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.814" endtime="20220606 08:54:51.814"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.814"/>
</if>
<status status="FAIL" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.814"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:51.734" endtime="20220606 08:54:51.816">254514.50 != 254514.00</status>
</test>
<test id="s1-s1-t11" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC11</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 75 years</arg>
<arg>05121946</arg>
<arg>M</arg>
<arg>TestRecord 0411</arg>
<arg>H123B789L</arg>
<arg>800000.999</arg>
<arg>7500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.821" level="INFO">${data} = {"birthday":"05121946","gender":"M","name":"TestRecord 0411","natid":"H123B789L","salary":"800000.999","tax":"7500"}</msg>
<status status="PASS" starttime="20220606 08:54:51.821" endtime="20220606 08:54:51.821"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.827" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.827" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.827" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.821" endtime="20220606 08:54:51.827"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.821" endtime="20220606 08:54:51.828"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.829" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.828" endtime="20220606 08:54:51.829"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.835" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body={"birthday":"05121946","gender":"M","name":"TestRecord 0411","natid":"H123B789L","salary":"800000.999","tax":"7500"} 
 </msg>
<msg timestamp="20220606 08:54:51.835" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.835" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.829" endtime="20220606 08:54:51.835"/>
</kw>
<msg timestamp="20220606 08:54:51.836" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.836" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.828" endtime="20220606 08:54:51.836"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.837" endtime="20220606 08:54:51.837"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.838" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.837" endtime="20220606 08:54:51.838"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.838" level="INFO">75
75
75
290847.87</msg>
<msg timestamp="20220606 08:54:51.838" level="INFO">${exp_calculated_taxRelief} = 290847.87</msg>
<status status="PASS" starttime="20220606 08:54:51.838" endtime="20220606 08:54:51.838"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.838" level="INFO">${exp_National_ID} = H123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.838" endtime="20220606 08:54:51.838"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.844" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.844" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"H123$$$$$","name":"TestRecord 0411","relief":"290847.87"}] 
 </msg>
<msg timestamp="20220606 08:54:51.844" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.838" endtime="20220606 08:54:51.844"/>
</kw>
<msg timestamp="20220606 08:54:51.845" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.845" level="INFO">${actual_resp_get_content} = [{"natid":"H123$$$$$","name":"TestRecord 0411","relief":"290847.87"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.838" endtime="20220606 08:54:51.846"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.864" level="INFO">${act_resp_name} = ['TestRecord 0411']</msg>
<status status="PASS" starttime="20220606 08:54:51.846" endtime="20220606 08:54:51.864"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.864" level="INFO">${act_resp_nationalID} = ['H123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.864" endtime="20220606 08:54:51.864"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.885" level="INFO">${act_resp_TaxRelief} = ['290847.87']</msg>
<status status="PASS" starttime="20220606 08:54:51.864" endtime="20220606 08:54:51.885"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.885" endtime="20220606 08:54:51.885"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.885" endtime="20220606 08:54:51.885"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.885" endtime="20220606 08:54:51.885"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.895" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.895" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"290847.87"} 
 </msg>
<msg timestamp="20220606 08:54:51.895" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.885" endtime="20220606 08:54:51.895"/>
</kw>
<msg timestamp="20220606 08:54:51.895" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.895" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"290847.87"}</msg>
<status status="PASS" starttime="20220606 08:54:51.885" endtime="20220606 08:54:51.895"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.915" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:51.895" endtime="20220606 08:54:51.915"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.915" level="INFO">${act_resp_totalTaxRelief} = ['290847.87']</msg>
<status status="PASS" starttime="20220606 08:54:51.915" endtime="20220606 08:54:51.915"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.915" endtime="20220606 08:54:51.915"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.915" endtime="20220606 08:54:51.915"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.820" endtime="20220606 08:54:51.915"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:51.915" endtime="20220606 08:54:51.915"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:51.915" endtime="20220606 08:54:51.915"/>
</branch>
<status status="PASS" starttime="20220606 08:54:51.820" endtime="20220606 08:54:51.915"/>
</if>
<status status="PASS" starttime="20220606 08:54:51.820" endtime="20220606 08:54:51.915"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:51.818" endtime="20220606 08:54:51.931"/>
</test>
<test id="s1-s1-t12" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC12</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 76 years</arg>
<arg>05051946</arg>
<arg>m</arg>
<arg>TestRecord 0412</arg>
<arg>I123B789H</arg>
<arg>900000</arg>
<arg>8500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:51.934" level="INFO">${data} = {"birthday":"05051946","gender":"m","name":"TestRecord 0412","natid":"I123B789H","salary":"900000","tax":"8500"}</msg>
<status status="PASS" starttime="20220606 08:54:51.934" endtime="20220606 08:54:51.934"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.940" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.940" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:51.940" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.934" endtime="20220606 08:54:51.940"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.934" endtime="20220606 08:54:51.940"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:51.941" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:51.941" endtime="20220606 08:54:51.941"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.946" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"05051946","gender":"m","name":"TestRecord 0412","natid":"I123B789H","salary":"900000","tax":"8500"} 
 </msg>
<msg timestamp="20220606 08:54:51.946" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:51.947" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.941" endtime="20220606 08:54:51.947"/>
</kw>
<msg timestamp="20220606 08:54:51.948" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:51.948" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:51.941" endtime="20220606 08:54:51.948"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:51.948" endtime="20220606 08:54:51.948"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:51.948" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.948" endtime="20220606 08:54:51.949"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:51.949" level="INFO">76
76
76
44575.00</msg>
<msg timestamp="20220606 08:54:51.949" level="INFO">${exp_calculated_taxRelief} = 44575.00</msg>
<status status="PASS" starttime="20220606 08:54:51.949" endtime="20220606 08:54:51.949"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:51.949" level="INFO">${exp_National_ID} = I123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:51.949" endtime="20220606 08:54:51.949"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:51.953" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:51.953" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:50 GMT'} 
 body=[{"natid":"I123$$$$$","name":"TestRecord 0412","relief":"44575.00"}] 
 </msg>
<msg timestamp="20220606 08:54:51.953" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.950" endtime="20220606 08:54:51.953"/>
</kw>
<msg timestamp="20220606 08:54:51.953" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:51.953" level="INFO">${actual_resp_get_content} = [{"natid":"I123$$$$$","name":"TestRecord 0412","relief":"44575.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:51.949" endtime="20220606 08:54:51.953"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.969" level="INFO">${act_resp_name} = ['TestRecord 0412']</msg>
<status status="PASS" starttime="20220606 08:54:51.953" endtime="20220606 08:54:51.969"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.973" level="INFO">${act_resp_nationalID} = ['I123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:51.969" endtime="20220606 08:54:51.973"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:51.987" level="INFO">${act_resp_TaxRelief} = ['44575.00']</msg>
<status status="PASS" starttime="20220606 08:54:51.973" endtime="20220606 08:54:51.987"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.987" endtime="20220606 08:54:51.987"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.987" endtime="20220606 08:54:51.987"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:51.987" endtime="20220606 08:54:51.987"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.002" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.002" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"44575.00"} 
 </msg>
<msg timestamp="20220606 08:54:52.002" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:51.987" endtime="20220606 08:54:52.002"/>
</kw>
<msg timestamp="20220606 08:54:52.002" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.002" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"44575.00"}</msg>
<status status="PASS" starttime="20220606 08:54:51.987" endtime="20220606 08:54:52.002"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.022" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:52.002" endtime="20220606 08:54:52.022"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.024" level="INFO">${act_resp_totalTaxRelief} = ['44575.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.022" endtime="20220606 08:54:52.024"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.024" endtime="20220606 08:54:52.024"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.024" endtime="20220606 08:54:52.024"/>
</kw>
<status status="PASS" starttime="20220606 08:54:51.934" endtime="20220606 08:54:52.024"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.024" endtime="20220606 08:54:52.024"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.024" endtime="20220606 08:54:52.024"/>
</branch>
<status status="PASS" starttime="20220606 08:54:51.934" endtime="20220606 08:54:52.024"/>
</if>
<status status="PASS" starttime="20220606 08:54:51.934" endtime="20220606 08:54:52.024"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:51.933" endtime="20220606 08:54:52.024"/>
</test>
<test id="s1-s1-t13" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC13</arg>
<arg>This testcase to verify the tax relief for a person who is Male and Age 100 years</arg>
<arg>22121921</arg>
<arg>m</arg>
<arg>TestRecord 0413</arg>
<arg>J35QF789R</arg>
<arg>1000000</arg>
<arg>9500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.040" level="INFO">${data} = {"birthday":"22121921","gender":"m","name":"TestRecord 0413","natid":"J35QF789R","salary":"1000000","tax":"9500"}</msg>
<status status="PASS" starttime="20220606 08:54:52.040" endtime="20220606 08:54:52.040"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.040" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.040" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.040" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.040" endtime="20220606 08:54:52.040"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.040" endtime="20220606 08:54:52.040"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.048" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.048" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body={"birthday":"22121921","gender":"m","name":"TestRecord 0413","natid":"J35QF789R","salary":"1000000","tax":"9500"} 
 </msg>
<msg timestamp="20220606 08:54:52.048" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.048" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<msg timestamp="20220606 08:54:52.048" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.048" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.040" endtime="20220606 08:54:52.048"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.048" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.048" level="INFO">100
100
100
49525.00</msg>
<msg timestamp="20220606 08:54:52.048" level="INFO">${exp_calculated_taxRelief} = 49525.00</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.048" level="INFO">${exp_National_ID} = J35Q$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.048" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.048" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"J35Q$$$$$","name":"TestRecord 0413","relief":"49525.00"}] 
 </msg>
<msg timestamp="20220606 08:54:52.048" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<msg timestamp="20220606 08:54:52.048" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.048" level="INFO">${actual_resp_get_content} = [{"natid":"J35Q$$$$$","name":"TestRecord 0413","relief":"49525.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.048"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.068" level="INFO">${act_resp_name} = ['TestRecord 0413']</msg>
<status status="PASS" starttime="20220606 08:54:52.048" endtime="20220606 08:54:52.068"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.086" level="INFO">${act_resp_nationalID} = ['J35Q$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.068" endtime="20220606 08:54:52.086"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.100" level="INFO">${act_resp_TaxRelief} = ['49525.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.086" endtime="20220606 08:54:52.100"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.100" endtime="20220606 08:54:52.100"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.100" endtime="20220606 08:54:52.100"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.100" endtime="20220606 08:54:52.100"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.113" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.113" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"49525.00"} 
 </msg>
<msg timestamp="20220606 08:54:52.113" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.100" endtime="20220606 08:54:52.113"/>
</kw>
<msg timestamp="20220606 08:54:52.113" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.113" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"49525.00"}</msg>
<status status="PASS" starttime="20220606 08:54:52.100" endtime="20220606 08:54:52.113"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.128" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:52.113" endtime="20220606 08:54:52.128"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.144" level="INFO">${act_resp_totalTaxRelief} = ['49525.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.128" endtime="20220606 08:54:52.144"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.144" endtime="20220606 08:54:52.144"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.144" endtime="20220606 08:54:52.144"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.040" endtime="20220606 08:54:52.144"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.144" endtime="20220606 08:54:52.144"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.144" endtime="20220606 08:54:52.144"/>
</branch>
<status status="PASS" starttime="20220606 08:54:52.040" endtime="20220606 08:54:52.144"/>
</if>
<status status="PASS" starttime="20220606 08:54:52.040" endtime="20220606 08:54:52.144"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:52.024" endtime="20220606 08:54:52.144"/>
</test>
<test id="s1-s1-t14" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC14</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 17 years</arg>
<arg>01012005</arg>
<arg>F</arg>
<arg>TestRecord 0414</arg>
<arg>K123B789T</arg>
<arg>1234567.89</arg>
<arg>820</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.153" level="INFO">${data} = {"birthday":"01012005","gender":"F","name":"TestRecord 0414","natid":"K123B789T","salary":"1234567.89","tax":"820"}</msg>
<status status="PASS" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.153"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.153" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.153" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.153" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.153"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.153"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.153" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.153"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.169" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body={"birthday":"01012005","gender":"F","name":"TestRecord 0414","natid":"K123B789T","salary":"1234567.89","tax":"820"} 
 </msg>
<msg timestamp="20220606 08:54:52.169" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.169" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.169"/>
</kw>
<msg timestamp="20220606 08:54:52.169" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.169" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.169"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.169" endtime="20220606 08:54:52.169"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.169" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.169" endtime="20220606 08:54:52.169"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.169" level="INFO">17
17
17
1234248.00</msg>
<msg timestamp="20220606 08:54:52.169" level="INFO">${exp_calculated_taxRelief} = 1234248.00</msg>
<status status="PASS" starttime="20220606 08:54:52.169" endtime="20220606 08:54:52.169"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.169" level="INFO">${exp_National_ID} = K123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.169" endtime="20220606 08:54:52.169"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.169" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.169" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"K123$$$$$","name":"TestRecord 0414","relief":"1234247.89"}] 
 </msg>
<msg timestamp="20220606 08:54:52.169" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.169" endtime="20220606 08:54:52.169"/>
</kw>
<msg timestamp="20220606 08:54:52.169" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.169" level="INFO">${actual_resp_get_content} = [{"natid":"K123$$$$$","name":"TestRecord 0414","relief":"1234247.89"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.169" endtime="20220606 08:54:52.169"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.186" level="INFO">${act_resp_name} = ['TestRecord 0414']</msg>
<status status="PASS" starttime="20220606 08:54:52.169" endtime="20220606 08:54:52.186"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.200" level="INFO">${act_resp_nationalID} = ['K123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.186" endtime="20220606 08:54:52.200"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.216" level="INFO">${act_resp_TaxRelief} = ['1234247.89']</msg>
<status status="PASS" starttime="20220606 08:54:52.200" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.216" level="FAIL">1234248.00 != 1234247.89</msg>
<status status="FAIL" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.216"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.216"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.216"/>
</if>
<status status="FAIL" starttime="20220606 08:54:52.153" endtime="20220606 08:54:52.216"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:52.144" endtime="20220606 08:54:52.216">1234248.00 != 1234247.89</status>
</test>
<test id="s1-s1-t15" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC15</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 18 years</arg>
<arg>30092003</arg>
<arg>f</arg>
<arg>TestRecord 0415</arg>
<arg>L123B789K</arg>
<arg>200000</arg>
<arg>1500.23</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.232" level="INFO">${data} = {"birthday":"30092003","gender":"f","name":"TestRecord 0415","natid":"L123B789K","salary":"200000","tax":"1500.23"}</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.232" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.232" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.232" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.232" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.232" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body={"birthday":"30092003","gender":"f","name":"TestRecord 0415","natid":"L123B789K","salary":"200000","tax":"1500.23"} 
 </msg>
<msg timestamp="20220606 08:54:52.232" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.232" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<msg timestamp="20220606 08:54:52.232" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.232" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.232" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.232" level="INFO">18
18
18
198999.77</msg>
<msg timestamp="20220606 08:54:52.232" level="INFO">${exp_calculated_taxRelief} = 198999.77</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.232"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.247" level="INFO">${exp_National_ID} = L123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.247"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.248" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.248" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"L123$$$$$","name":"TestRecord 0415","relief":"198999.77"}] 
 </msg>
<msg timestamp="20220606 08:54:52.248" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.247" endtime="20220606 08:54:52.248"/>
</kw>
<msg timestamp="20220606 08:54:52.248" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.248" level="INFO">${actual_resp_get_content} = [{"natid":"L123$$$$$","name":"TestRecord 0415","relief":"198999.77"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.247" endtime="20220606 08:54:52.248"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.264" level="INFO">${act_resp_name} = ['TestRecord 0415']</msg>
<status status="PASS" starttime="20220606 08:54:52.248" endtime="20220606 08:54:52.264"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.286" level="INFO">${act_resp_nationalID} = ['L123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.264" endtime="20220606 08:54:52.286"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.295" level="INFO">${act_resp_TaxRelief} = ['198999.77']</msg>
<status status="PASS" starttime="20220606 08:54:52.286" endtime="20220606 08:54:52.295"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.295" endtime="20220606 08:54:52.295"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.295" endtime="20220606 08:54:52.295"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.295" endtime="20220606 08:54:52.295"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.311" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.311" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"198999.77"} 
 </msg>
<msg timestamp="20220606 08:54:52.311" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.295" endtime="20220606 08:54:52.311"/>
</kw>
<msg timestamp="20220606 08:54:52.311" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.311" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"198999.77"}</msg>
<status status="PASS" starttime="20220606 08:54:52.295" endtime="20220606 08:54:52.311"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.327" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:52.311" endtime="20220606 08:54:52.327"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.342" level="INFO">${act_resp_totalTaxRelief} = ['198999.77']</msg>
<status status="PASS" starttime="20220606 08:54:52.327" endtime="20220606 08:54:52.342"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.342"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.342"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.342"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.342"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.342"/>
</branch>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.342"/>
</if>
<status status="PASS" starttime="20220606 08:54:52.232" endtime="20220606 08:54:52.342"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:52.216" endtime="20220606 08:54:52.342"/>
</test>
<test id="s1-s1-t16" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC16</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 34 years</arg>
<arg>09111987</arg>
<arg>f</arg>
<arg>TestRecord 0416</arg>
<arg>M123B789L</arg>
<arg>30000</arg>
<arg>2501</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.342" level="INFO">${data} = {"birthday":"09111987","gender":"f","name":"TestRecord 0416","natid":"M123B789L","salary":"30000","tax":"2501"}</msg>
<status status="PASS" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.342"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.358" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.358" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.358" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.358"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.358"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.358" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.358"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.358" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '111'} 
 body={"birthday":"09111987","gender":"f","name":"TestRecord 0416","natid":"M123B789L","salary":"30000","tax":"2501"} 
 </msg>
<msg timestamp="20220606 08:54:52.358" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.358" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.358"/>
</kw>
<msg timestamp="20220606 08:54:52.358" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.358" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.358"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.358"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.358" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.358"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.358" level="INFO">34
34
34
22499.20</msg>
<msg timestamp="20220606 08:54:52.358" level="INFO">${exp_calculated_taxRelief} = 22499.20</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.358"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.358" level="INFO">${exp_National_ID} = M123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.358"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.375" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.375" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"M123$$$$$","name":"TestRecord 0416","relief":"22499.00"}] 
 </msg>
<msg timestamp="20220606 08:54:52.375" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.375"/>
</kw>
<msg timestamp="20220606 08:54:52.375" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.375" level="INFO">${actual_resp_get_content} = [{"natid":"M123$$$$$","name":"TestRecord 0416","relief":"22499.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.358" endtime="20220606 08:54:52.375"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.390" level="INFO">${act_resp_name} = ['TestRecord 0416']</msg>
<status status="PASS" starttime="20220606 08:54:52.375" endtime="20220606 08:54:52.390"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.411" level="INFO">${act_resp_nationalID} = ['M123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.390" endtime="20220606 08:54:52.411"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.443" level="INFO">${act_resp_TaxRelief} = ['22499.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.411" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.443" level="FAIL">22499.20 != 22499.00</msg>
<status status="FAIL" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.443"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.443"/>
</if>
<status status="FAIL" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.443"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:52.342" endtime="20220606 08:54:52.443">22499.20 != 22499.00</status>
</test>
<test id="s1-s1-t17" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC17</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 35 years</arg>
<arg>21101986</arg>
<arg>f</arg>
<arg>TestRecord 0417</arg>
<arg>N123B789Q</arg>
<arg>40000</arg>
<arg>3500.1</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.443" level="INFO">${data} = {"birthday":"21101986","gender":"f","name":"TestRecord 0417","natid":"N123B789Q","salary":"40000","tax":"3500.1"}</msg>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.443" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.443" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.443" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.443" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.443"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.460" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body={"birthday":"21101986","gender":"f","name":"TestRecord 0417","natid":"N123B789Q","salary":"40000","tax":"3500.1"} 
 </msg>
<msg timestamp="20220606 08:54:52.460" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.460" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.460"/>
</kw>
<msg timestamp="20220606 08:54:52.460" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.460" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.460"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.460" endtime="20220606 08:54:52.460"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.460" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.460" endtime="20220606 08:54:52.460"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.460" level="INFO">35
35
35
29699.92</msg>
<msg timestamp="20220606 08:54:52.460" level="INFO">${exp_calculated_taxRelief} = 29699.92</msg>
<status status="PASS" starttime="20220606 08:54:52.460" endtime="20220606 08:54:52.460"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.460" level="INFO">${exp_National_ID} = N123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.460" endtime="20220606 08:54:52.460"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.460" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.460" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"N123$$$$$","name":"TestRecord 0417","relief":"29699.93"}] 
 </msg>
<msg timestamp="20220606 08:54:52.460" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.460" endtime="20220606 08:54:52.460"/>
</kw>
<msg timestamp="20220606 08:54:52.460" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.460" level="INFO">${actual_resp_get_content} = [{"natid":"N123$$$$$","name":"TestRecord 0417","relief":"29699.93"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.460" endtime="20220606 08:54:52.460"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.476" level="INFO">${act_resp_name} = ['TestRecord 0417']</msg>
<status status="PASS" starttime="20220606 08:54:52.460" endtime="20220606 08:54:52.476"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.491" level="INFO">${act_resp_nationalID} = ['N123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.486" endtime="20220606 08:54:52.491"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.507" level="INFO">${act_resp_TaxRelief} = ['29699.93']</msg>
<status status="PASS" starttime="20220606 08:54:52.491" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.507" level="FAIL">29699.92 != 29699.93</msg>
<status status="FAIL" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.507"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.507"/>
</if>
<status status="FAIL" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.507"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:52.443" endtime="20220606 08:54:52.507">29699.92 != 29699.93</status>
</test>
<test id="s1-s1-t18" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC18</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 49 years</arg>
<arg>19101972</arg>
<arg>F</arg>
<arg>TestRecord 0418</arg>
<arg>O123B789L</arg>
<arg>500000</arg>
<arg>4500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.507" level="INFO">${data} = {"birthday":"19101972","gender":"F","name":"TestRecord 0418","natid":"O123B789L","salary":"500000","tax":"4500"}</msg>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.507"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.523" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.523" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.523" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.523"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.523"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.523" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.523"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.523" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"19101972","gender":"F","name":"TestRecord 0418","natid":"O123B789L","salary":"500000","tax":"4500"} 
 </msg>
<msg timestamp="20220606 08:54:52.523" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.523" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.523"/>
</kw>
<msg timestamp="20220606 08:54:52.523" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.523" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.523"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.523"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.523" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.523"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.523" level="INFO">49
49
49
248250.00</msg>
<msg timestamp="20220606 08:54:52.523" level="INFO">${exp_calculated_taxRelief} = 248250.00</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.523"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.523" level="INFO">${exp_National_ID} = O123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.523"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.539" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.539" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"O123$$$$$","name":"TestRecord 0418","relief":"248250.00"}] 
 </msg>
<msg timestamp="20220606 08:54:52.539" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.539"/>
</kw>
<msg timestamp="20220606 08:54:52.539" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.539" level="INFO">${actual_resp_get_content} = [{"natid":"O123$$$$$","name":"TestRecord 0418","relief":"248250.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.523" endtime="20220606 08:54:52.539"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.539" level="INFO">${act_resp_name} = ['TestRecord 0418']</msg>
<status status="PASS" starttime="20220606 08:54:52.539" endtime="20220606 08:54:52.539"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.555" level="INFO">${act_resp_nationalID} = ['O123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.539" endtime="20220606 08:54:52.555"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.571" level="INFO">${act_resp_TaxRelief} = ['248250.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.555" endtime="20220606 08:54:52.571"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.571" endtime="20220606 08:54:52.571"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.571" endtime="20220606 08:54:52.571"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.571" endtime="20220606 08:54:52.571"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.571" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.571" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"248250.00"} 
 </msg>
<msg timestamp="20220606 08:54:52.571" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.571" endtime="20220606 08:54:52.571"/>
</kw>
<msg timestamp="20220606 08:54:52.586" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.586" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"248250.00"}</msg>
<status status="PASS" starttime="20220606 08:54:52.571" endtime="20220606 08:54:52.586"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.587" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:52.586" endtime="20220606 08:54:52.587"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.603" level="INFO">${act_resp_totalTaxRelief} = ['248250.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.587" endtime="20220606 08:54:52.603"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.603"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.603"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.603"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.603"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.603"/>
</branch>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.603"/>
</if>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.603"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:52.507" endtime="20220606 08:54:52.603"/>
</test>
<test id="s1-s1-t19" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC19</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 50 years</arg>
<arg>29081971</arg>
<arg>f</arg>
<arg>TestRecord 0419</arg>
<arg>P123B789S</arg>
<arg>600000.55</arg>
<arg>5500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.603" level="INFO">${data} = {"birthday":"29081971","gender":"f","name":"TestRecord 0419","natid":"P123B789S","salary":"600000.55","tax":"5500"}</msg>
<status status="PASS" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.603"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.619" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.619" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.619" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.619"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.619"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.619" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.619"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.619" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body={"birthday":"29081971","gender":"f","name":"TestRecord 0419","natid":"P123B789S","salary":"600000.55","tax":"5500"} 
 </msg>
<msg timestamp="20220606 08:54:52.619" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.619" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.619"/>
</kw>
<msg timestamp="20220606 08:54:52.619" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.619" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.619"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.619"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.619" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.619"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.619" level="INFO">50
50
50
297750.50</msg>
<msg timestamp="20220606 08:54:52.619" level="INFO">${exp_calculated_taxRelief} = 297750.50</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.619"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.619" level="INFO">${exp_National_ID} = P123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.619"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.636" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.636" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"P123$$$$$","name":"TestRecord 0419","relief":"297750.00"}] 
 </msg>
<msg timestamp="20220606 08:54:52.636" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.636"/>
</kw>
<msg timestamp="20220606 08:54:52.636" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.636" level="INFO">${actual_resp_get_content} = [{"natid":"P123$$$$$","name":"TestRecord 0419","relief":"297750.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.619" endtime="20220606 08:54:52.636"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.651" level="INFO">${act_resp_name} = ['TestRecord 0419']</msg>
<status status="PASS" starttime="20220606 08:54:52.636" endtime="20220606 08:54:52.651"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.667" level="INFO">${act_resp_nationalID} = ['P123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.651" endtime="20220606 08:54:52.667"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.686" level="INFO">${act_resp_TaxRelief} = ['297750.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.667" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.686" level="FAIL">297750.50 != 297750.00</msg>
<status status="FAIL" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.686"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.686"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.686"/>
</if>
<status status="FAIL" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.686"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:52.603" endtime="20220606 08:54:52.686">297750.50 != 297750.00</status>
</test>
<test id="s1-s1-t20" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC20</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 74 years</arg>
<arg>15081947</arg>
<arg>f</arg>
<arg>TestRecord 0420</arg>
<arg>Q123B789G</arg>
<arg>700000</arg>
<arg>6500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.699" level="INFO">${data} = {"birthday":"15081947","gender":"f","name":"TestRecord 0420","natid":"Q123B789G","salary":"700000","tax":"6500"}</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.699" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.699" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.699" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.699" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.699" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"15081947","gender":"f","name":"TestRecord 0420","natid":"Q123B789G","salary":"700000","tax":"6500"} 
 </msg>
<msg timestamp="20220606 08:54:52.699" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.699" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<msg timestamp="20220606 08:54:52.699" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.699" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.699" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.699" level="INFO">74
74
74
255014.50</msg>
<msg timestamp="20220606 08:54:52.699" level="INFO">${exp_calculated_taxRelief} = 255014.50</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.699" level="INFO">${exp_National_ID} = Q123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.699"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.715" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.715" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"Q123$$$$$","name":"TestRecord 0420","relief":"255014.00"}] 
 </msg>
<msg timestamp="20220606 08:54:52.715" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.715"/>
</kw>
<msg timestamp="20220606 08:54:52.715" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.715" level="INFO">${actual_resp_get_content} = [{"natid":"Q123$$$$$","name":"TestRecord 0420","relief":"255014.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.715"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.731" level="INFO">${act_resp_name} = ['TestRecord 0420']</msg>
<status status="PASS" starttime="20220606 08:54:52.715" endtime="20220606 08:54:52.731"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.731" level="INFO">${act_resp_nationalID} = ['Q123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.731" endtime="20220606 08:54:52.731"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.747" level="INFO">${act_resp_TaxRelief} = ['255014.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.731" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.747" level="FAIL">255014.50 != 255014.00</msg>
<status status="FAIL" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<status status="FAIL" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.747"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.747" endtime="20220606 08:54:52.747"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.747"/>
</if>
<status status="FAIL" starttime="20220606 08:54:52.699" endtime="20220606 08:54:52.747"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:52.686" endtime="20220606 08:54:52.747">255014.50 != 255014.00</status>
</test>
<test id="s1-s1-t21" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC21</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 75 years</arg>
<arg>05121946</arg>
<arg>F</arg>
<arg>TestRecord 0421</arg>
<arg>R123B789C</arg>
<arg>800000.999</arg>
<arg>7500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.763" level="INFO">${data} = {"birthday":"05121946","gender":"F","name":"TestRecord 0421","natid":"R123B789C","salary":"800000.999","tax":"7500"}</msg>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.763"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.763" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.763" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.763" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.763"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.763"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.763" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.763"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.763" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body={"birthday":"05121946","gender":"F","name":"TestRecord 0421","natid":"R123B789C","salary":"800000.999","tax":"7500"} 
 </msg>
<msg timestamp="20220606 08:54:52.763" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.763" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.763"/>
</kw>
<msg timestamp="20220606 08:54:52.778" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.778" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.778"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.778" endtime="20220606 08:54:52.779"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.779" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.779" endtime="20220606 08:54:52.779"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.779" level="INFO">75
75
75
291347.87</msg>
<msg timestamp="20220606 08:54:52.779" level="INFO">${exp_calculated_taxRelief} = 291347.87</msg>
<status status="PASS" starttime="20220606 08:54:52.779" endtime="20220606 08:54:52.779"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.779" level="INFO">${exp_National_ID} = R123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.779" endtime="20220606 08:54:52.779"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.779" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.779" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"R123$$$$$","name":"TestRecord 0421","relief":"291347.87"}] 
 </msg>
<msg timestamp="20220606 08:54:52.779" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.779" endtime="20220606 08:54:52.779"/>
</kw>
<msg timestamp="20220606 08:54:52.779" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.779" level="INFO">${actual_resp_get_content} = [{"natid":"R123$$$$$","name":"TestRecord 0421","relief":"291347.87"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.779" endtime="20220606 08:54:52.779"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.795" level="INFO">${act_resp_name} = ['TestRecord 0421']</msg>
<status status="PASS" starttime="20220606 08:54:52.779" endtime="20220606 08:54:52.795"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.795" level="INFO">${act_resp_nationalID} = ['R123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.795" endtime="20220606 08:54:52.795"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.810" level="INFO">${act_resp_TaxRelief} = ['291347.87']</msg>
<status status="PASS" starttime="20220606 08:54:52.795" endtime="20220606 08:54:52.810"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.810" endtime="20220606 08:54:52.810"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.810" endtime="20220606 08:54:52.810"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.810" endtime="20220606 08:54:52.810"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.826" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.826" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"291347.87"} 
 </msg>
<msg timestamp="20220606 08:54:52.826" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.810" endtime="20220606 08:54:52.826"/>
</kw>
<msg timestamp="20220606 08:54:52.826" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.826" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"291347.87"}</msg>
<status status="PASS" starttime="20220606 08:54:52.810" endtime="20220606 08:54:52.826"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.842" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:52.826" endtime="20220606 08:54:52.842"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.842" level="INFO">${act_resp_totalTaxRelief} = ['291347.87']</msg>
<status status="PASS" starttime="20220606 08:54:52.842" endtime="20220606 08:54:52.842"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.842" endtime="20220606 08:54:52.842"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.842" endtime="20220606 08:54:52.842"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.842"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.842" endtime="20220606 08:54:52.842"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.842" endtime="20220606 08:54:52.842"/>
</branch>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.842"/>
</if>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.842"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:52.763" endtime="20220606 08:54:52.842"/>
</test>
<test id="s1-s1-t22" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC22</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 76 years</arg>
<arg>05051946</arg>
<arg>f</arg>
<arg>TestRecord 0422</arg>
<arg>S123B789L</arg>
<arg>900000</arg>
<arg>8500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.859" level="INFO">${data} = {"birthday":"05051946","gender":"f","name":"TestRecord 0422","natid":"S123B789L","salary":"900000","tax":"8500"}</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.859" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.859" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.859" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.859" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.859" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"05051946","gender":"f","name":"TestRecord 0422","natid":"S123B789L","salary":"900000","tax":"8500"} 
 </msg>
<msg timestamp="20220606 08:54:52.859" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.859" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<msg timestamp="20220606 08:54:52.859" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.859" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.859" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.859" level="INFO">76
76
76
45075.00</msg>
<msg timestamp="20220606 08:54:52.859" level="INFO">${exp_calculated_taxRelief} = 45075.00</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.859" level="INFO">${exp_National_ID} = S123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.859"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.875" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.875" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"S123$$$$$","name":"TestRecord 0422","relief":"45075.00"}] 
 </msg>
<msg timestamp="20220606 08:54:52.875" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.874" endtime="20220606 08:54:52.875"/>
</kw>
<msg timestamp="20220606 08:54:52.875" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.875" level="INFO">${actual_resp_get_content} = [{"natid":"S123$$$$$","name":"TestRecord 0422","relief":"45075.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.874" endtime="20220606 08:54:52.875"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.890" level="INFO">${act_resp_name} = ['TestRecord 0422']</msg>
<status status="PASS" starttime="20220606 08:54:52.875" endtime="20220606 08:54:52.890"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.906" level="INFO">${act_resp_nationalID} = ['S123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.890" endtime="20220606 08:54:52.906"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.906" level="INFO">${act_resp_TaxRelief} = ['45075.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.906" endtime="20220606 08:54:52.906"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.906" endtime="20220606 08:54:52.906"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.906" endtime="20220606 08:54:52.906"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.906" endtime="20220606 08:54:52.906"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.921" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.921" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"45075.00"} 
 </msg>
<msg timestamp="20220606 08:54:52.921" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.906" endtime="20220606 08:54:52.921"/>
</kw>
<msg timestamp="20220606 08:54:52.921" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.921" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"45075.00"}</msg>
<status status="PASS" starttime="20220606 08:54:52.906" endtime="20220606 08:54:52.921"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.937" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:52.921" endtime="20220606 08:54:52.937"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.952" level="INFO">${act_resp_totalTaxRelief} = ['45075.00']</msg>
<status status="PASS" starttime="20220606 08:54:52.937" endtime="20220606 08:54:52.952"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.952"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</branch>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.952"/>
</if>
<status status="PASS" starttime="20220606 08:54:52.859" endtime="20220606 08:54:52.952"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:52.858" endtime="20220606 08:54:52.952"/>
</test>
<test id="s1-s1-t23" name="create working class hero and validate tax relief calculation" line="18">
<kw name="create working class hero and get the tax relief">
<arg>YES</arg>
<arg>US04_VerifyTaxRelief_TC23</arg>
<arg>This testcase to verify the tax relief for a person who is Female and Age 100 years</arg>
<arg>22121921</arg>
<arg>f</arg>
<arg>TestRecord 0423</arg>
<arg>T123B789F</arg>
<arg>1000000</arg>
<arg>9500</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:52.952" level="INFO">${data} = {"birthday":"22121921","gender":"f","name":"TestRecord 0423","natid":"T123B789F","salary":"1000000","tax":"9500"}</msg>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.952" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.952" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:52.952" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:52.952" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.952"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.968" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body={"birthday":"22121921","gender":"f","name":"TestRecord 0423","natid":"T123B789F","salary":"1000000","tax":"9500"} 
 </msg>
<msg timestamp="20220606 08:54:52.968" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:52.968" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.968"/>
</kw>
<msg timestamp="20220606 08:54:52.968" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:52.968" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:52.968"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:52.968" endtime="20220606 08:54:52.968"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:52.968" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.968" endtime="20220606 08:54:52.968"/>
</kw>
<kw name="Calculate Tax Relief" library="Common_Logic">
<var>${exp_calculated_taxRelief}</var>
<arg>${salary}</arg>
<arg>${tax}</arg>
<arg>${gender}</arg>
<arg>${birthday}</arg>
<msg timestamp="20220606 08:54:52.968" level="INFO">100
100
100
50025.00</msg>
<msg timestamp="20220606 08:54:52.968" level="INFO">${exp_calculated_taxRelief} = 50025.00</msg>
<status status="PASS" starttime="20220606 08:54:52.968" endtime="20220606 08:54:52.968"/>
</kw>
<kw name="Generate Mask Nationalid" library="Common_Logic">
<var>${exp_National_ID}</var>
<arg>${natid}</arg>
<msg timestamp="20220606 08:54:52.968" level="INFO">${exp_National_ID} = T123$$$$$</msg>
<status status="PASS" starttime="20220606 08:54:52.968" endtime="20220606 08:54:52.968"/>
</kw>
<kw name="Get Tax Relief" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxRelief}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxRelief</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:52.968" level="INFO">GET Request : url=http://localhost:8080/calculator/taxRelief 
 path_url=/calculator/taxRelief 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:52.968" level="INFO">GET Response : url=http://localhost:8080/calculator/taxRelief 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:52 GMT'} 
 body=[{"natid":"T123$$$$$","name":"TestRecord 0423","relief":"50025.00"}] 
 </msg>
<msg timestamp="20220606 08:54:52.968" level="INFO">${resp_taxRelief} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:52.968" endtime="20220606 08:54:52.968"/>
</kw>
<msg timestamp="20220606 08:54:52.968" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:52.968" level="INFO">${actual_resp_get_content} = [{"natid":"T123$$$$$","name":"TestRecord 0423","relief":"50025.00"}]</msg>
<status status="PASS" starttime="20220606 08:54:52.968" endtime="20220606 08:54:52.968"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_name}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:52.987" level="INFO">${act_resp_name} = ['TestRecord 0423']</msg>
<status status="PASS" starttime="20220606 08:54:52.968" endtime="20220606 08:54:52.987"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_nationalID}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..natid</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.000" level="INFO">${act_resp_nationalID} = ['T123$$$$$']</msg>
<status status="PASS" starttime="20220606 08:54:52.987" endtime="20220606 08:54:53.000"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_TaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..relief</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.000" level="INFO">${act_resp_TaxRelief} = ['50025.00']</msg>
<status status="PASS" starttime="20220606 08:54:53.000" endtime="20220606 08:54:53.000"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${name}</arg>
<arg>${act_resp_name}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.000" endtime="20220606 08:54:53.000"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_National_ID}</arg>
<arg>${act_resp_nationalID}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.016" endtime="20220606 08:54:53.016"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_TaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.016" endtime="20220606 08:54:53.016"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.016" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.016" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body={"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"50025.00"} 
 </msg>
<msg timestamp="20220606 08:54:53.016" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.016" endtime="20220606 08:54:53.016"/>
</kw>
<msg timestamp="20220606 08:54:53.016" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:53.016" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"1","totalTaxReliefAmount":"50025.00"}</msg>
<status status="PASS" starttime="20220606 08:54:53.016" endtime="20220606 08:54:53.016"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.031" level="INFO">${act_resp_NoOfWorkingClassHeros} = ['1']</msg>
<status status="PASS" starttime="20220606 08:54:53.016" endtime="20220606 08:54:53.031"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${act_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.047" level="INFO">${act_resp_totalTaxRelief} = ['50025.00']</msg>
<status status="PASS" starttime="20220606 08:54:53.031" endtime="20220606 08:54:53.047"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${act_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>1</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.047" endtime="20220606 08:54:53.047"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${exp_calculated_taxRelief}</arg>
<arg>${act_resp_totalTaxRelief}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.047" endtime="20220606 08:54:53.047"/>
</kw>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:53.047"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.047" endtime="20220606 08:54:53.047"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.047" endtime="20220606 08:54:53.047"/>
</branch>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:53.047"/>
</if>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:53.047"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:52.952" endtime="20220606 08:54:53.047"/>
</test>
<status status="FAIL" starttime="20220606 08:54:50.283" endtime="20220606 08:54:53.047"/>
</suite>
<suite id="s1-s2" name="Oppenheimer API InsertMultiplePerson" source="R:\pythonProject\Oppenheimer_Test_Automation\Oppenheimer_Test_Automation\testcases\Oppenheimer_API_InsertMultiplePerson.robot">
<kw name="Create Session" library="RequestsLibrary" type="SETUP">
<arg>Oppenheimer</arg>
<arg>http://localhost:8080</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220606 08:54:53.063" level="INFO">Creating Session using : alias=Oppenheimer, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.063"/>
</kw>
<test id="s1-s2-t1" name="create more than one working class hero functional validation" line="16">
<kw name="create multiple working class hero">
<arg>YES</arg>
<arg>US02_InsertMultipleRecord_TC01</arg>
<arg>Verify insertion of multiple record having all valid data </arg>
<arg>[{  "birthday": "01012010",
  "gender": "f",
  "name": "John",
  "natid": "H123KH03",
  "salary": "100000",
  "tax": "10000" },{  "birthday": "01012010",
  "gender": "m",
  "name": "Kim",
  "natid": "G8934JHLG",
  "salary": "8000",
  "tax": "80.80" }]</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>${request_payload}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.063" level="INFO">${data} = [{  "birthday": "01012010",
  "gender": "f",
  "name": "John",
  "natid": "H123KH03",
  "salary": "100000",
  "tax": "10000" },{  "birthday": "01012010",
  "gender": "m",
  "name": "Kim",
  "natid": "...</msg>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.063"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.063" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.063" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.063" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.063"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.063"/>
</kw>
<kw name="Trigger create multiple working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.080" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.079" endtime="20220606 08:54:53.080"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_multiplePerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insertMultiple</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.080" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '251'} 
 body=[{  "birthday": "01012010",
  "gender": "f",
  "name": "John",
  "natid": "H123KH03",
  "salary": "100000",
  "tax": "10000" },{  "birthday": "01012010",
  "gender": "m",
  "name": "Kim",
  "natid": "G8934JHLG",
  "salary": "8000",
  "tax": "80.80" }] 
 </msg>
<msg timestamp="20220606 08:54:53.080" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.080" level="INFO">${resp_multiplePerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.080" endtime="20220606 08:54:53.080"/>
</kw>
<msg timestamp="20220606 08:54:53.080" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.080" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.080"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.080" endtime="20220606 08:54:53.087"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.087"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.087"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.087"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.087" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.087"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.087" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.087" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body={"totalWorkingClassHeroes":"2","totalTaxReliefAmount":"98419.00"} 
 </msg>
<msg timestamp="20220606 08:54:53.087" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.087"/>
</kw>
<msg timestamp="20220606 08:54:53.087" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:53.087" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"2","totalTaxReliefAmount":"98419.00"}</msg>
<status status="PASS" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.087"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${GET_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.119" level="INFO">${GET_resp_NoOfWorkingClassHeros} = ['2']</msg>
<status status="PASS" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.119"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${GET_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.139" level="INFO">${GET_resp_totalTaxRelief} = ['98419.00']</msg>
<status status="PASS" starttime="20220606 08:54:53.119" endtime="20220606 08:54:53.139"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${GET_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>2</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.139"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.139"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.087" endtime="20220606 08:54:53.139"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.139"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.139"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.139"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.139"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.139"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.063" endtime="20220606 08:54:53.139"/>
</test>
<test id="s1-s2-t2" name="create more than one working class hero functional validation" line="16">
<kw name="create multiple working class hero">
<arg>YES</arg>
<arg>US02_InsertMultipleRecord_TC02</arg>
<arg>Verify insertion of multiple record having fields with Incorrect or BLANK Values</arg>
<arg>[{  "birthday": "01152010",
  "gender": "m",
  "name": "Rahul",
  "natid": "Indian",
  "salary": "100000",
  "tax": "10000" },{  "birthday": "01012010",
  "gender": "m",
  "name": "Tintu",
  "natid": "G1235KJD",
  "salary": "8000",
  "tax": "80.80" }]</arg>
<arg>500</arg>
<arg>Text '01152010' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 15</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>${request_payload}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.139" level="INFO">${data} = [{  "birthday": "01152010",
  "gender": "m",
  "name": "Rahul",
  "natid": "Indian",
  "salary": "100000",
  "tax": "10000" },{  "birthday": "01012010",
  "gender": "m",
  "name": "Tintu",
  "natid": ...</msg>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.139"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.150" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.150" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.150" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.150"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.151"/>
</kw>
<kw name="Trigger create multiple working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.151" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.151" endtime="20220606 08:54:53.151"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_multiplePerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insertMultiple</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.154" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '251'} 
 body=[{  "birthday": "01152010",
  "gender": "m",
  "name": "Rahul",
  "natid": "Indian",
  "salary": "100000",
  "tax": "10000" },{  "birthday": "01012010",
  "gender": "m",
  "name": "Tintu",
  "natid": "G1235KJD",
  "salary": "8000",
  "tax": "80.80" }] 
 </msg>
<msg timestamp="20220606 08:54:53.154" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.153+0000","status":500,"error":"Internal Server Error","message":"Text '01152010' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 15","path":"/calculator/insertMultiple"} 
 </msg>
<msg timestamp="20220606 08:54:53.154" level="INFO">${resp_multiplePerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.152" endtime="20220606 08:54:53.154"/>
</kw>
<msg timestamp="20220606 08:54:53.154" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.154" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.153+0000","status":500,"error":"Internal Server Error","message":"Text '01152010' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 15","path"...</msg>
<status status="PASS" starttime="20220606 08:54:53.151" endtime="20220606 08:54:53.154"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.154" endtime="20220606 08:54:53.154"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.169" level="INFO">${actual_resp_message} = ["Text '01152010' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 15"]</msg>
<status status="PASS" starttime="20220606 08:54:53.154" endtime="20220606 08:54:53.169"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.154" endtime="20220606 08:54:53.169"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${GET_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${GET_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${GET_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>2</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.154" endtime="20220606 08:54:53.169"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.169"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.169" endtime="20220606 08:54:53.169"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.169"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.169"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.139" endtime="20220606 08:54:53.169"/>
</test>
<test id="s1-s2-t3" name="create more than one working class hero functional validation" line="16">
<kw name="create multiple working class hero">
<arg>YES</arg>
<arg>US02_InsertMultipleRecord_TC03</arg>
<arg>Verify insertion of multiple record having duplicate values </arg>
<arg>[{  "birthday": "19071990",
  "gender": "M",
  "name": "Shyam",
  "natid": "D2339HK23",
  "salary": "4580.876",
  "tax": "806" },
{  "birthday": "19071990",
  "gender": "m",
  "name": "Shyam",
  "natid": "D2339HK23",
  "salary": "4580.876",
  "tax": "806" }]</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>${request_payload}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.187" level="INFO">${data} = [{  "birthday": "19071990",
  "gender": "M",
  "name": "Shyam",
  "natid": "D2339HK23",
  "salary": "4580.876",
  "tax": "806" },
{  "birthday": "19071990",
  "gender": "m",
  "name": "Shyam",
  "nati...</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.187" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.187" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.187" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<kw name="Trigger create multiple working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.187" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_multiplePerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insertMultiple</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.187" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '258'} 
 body=[{  "birthday": "19071990",
  "gender": "M",
  "name": "Shyam",
  "natid": "D2339HK23",
  "salary": "4580.876",
  "tax": "806" },
{  "birthday": "19071990",
  "gender": "m",
  "name": "Shyam",
  "natid": "D2339HK23",
  "salary": "4580.876",
  "tax": "806" }] 
 </msg>
<msg timestamp="20220606 08:54:53.187" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.187" level="INFO">${resp_multiplePerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<msg timestamp="20220606 08:54:53.187" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.187" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.187" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.187"/>
</kw>
<kw name="Get Tax Relief Summary" library="Common_Keywords">
<var>${actual_resp_get_status_code}</var>
<var>${actual_resp_get_content}</var>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp_taxReliefsummary}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/taxReliefSummary</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.201" level="INFO">GET Request : url=http://localhost:8080/calculator/taxReliefSummary 
 path_url=/calculator/taxReliefSummary 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.201" level="INFO">GET Response : url=http://localhost:8080/calculator/taxReliefSummary 
 status=200, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body={"totalWorkingClassHeroes":"2","totalTaxReliefAmount":"6039.82"} 
 </msg>
<msg timestamp="20220606 08:54:53.201" level="INFO">${resp_taxReliefsummary} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.201"/>
</kw>
<msg timestamp="20220606 08:54:53.201" level="INFO">${actual_resp_get_status_code} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220606 08:54:53.201" level="INFO">${actual_resp_get_content} = {"totalWorkingClassHeroes":"2","totalTaxReliefAmount":"6039.82"}</msg>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.201"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${GET_resp_NoOfWorkingClassHeros}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalWorkingClassHeroes</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.219" level="INFO">${GET_resp_NoOfWorkingClassHeros} = ['2']</msg>
<status status="PASS" starttime="20220606 08:54:53.201" endtime="20220606 08:54:53.219"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${GET_resp_totalTaxRelief}</var>
<arg>${actual_resp_get_status_code.json()}</arg>
<arg>$..totalTaxReliefAmount</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.229" level="INFO">${GET_resp_totalTaxRelief} = ['6039.82']</msg>
<status status="PASS" starttime="20220606 08:54:53.219" endtime="20220606 08:54:53.229"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${GET_resp_NoOfWorkingClassHeros}[0]</arg>
<arg>2</arg>
<arg>Number Of Working Heros not matched</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.229" endtime="20220606 08:54:53.229"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.229"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.229"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.229"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.229" endtime="20220606 08:54:53.229"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.229" endtime="20220606 08:54:53.229"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.229"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.187" endtime="20220606 08:54:53.229"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.186" endtime="20220606 08:54:53.229"/>
</test>
<status status="PASS" starttime="20220606 08:54:53.047" endtime="20220606 08:54:53.229"/>
</suite>
<suite id="s1-s3" name="Oppenheimer API InsertPerson" source="R:\pythonProject\Oppenheimer_Test_Automation\Oppenheimer_Test_Automation\testcases\Oppenheimer_API_InsertPerson.robot">
<kw name="Create Session" library="RequestsLibrary" type="SETUP">
<arg>Oppenheimer</arg>
<arg>http://localhost:8080</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220606 08:54:53.270" level="INFO">Creating Session using : alias=Oppenheimer, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220606 08:54:53.270" endtime="20220606 08:54:53.270"/>
</kw>
<test id="s1-s3-t1" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC01</arg>
<arg>Verify insert person having all valid data</arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord01</arg>
<arg>G565404FF</arg>
<arg>100000</arg>
<arg>100</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.272" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord01","natid":"G565404FF","salary":"100000","tax":"100"}</msg>
<status status="PASS" starttime="20220606 08:54:53.272" endtime="20220606 08:54:53.272"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.279" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.279" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.279" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.272" endtime="20220606 08:54:53.279"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.272" endtime="20220606 08:54:53.279"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.280" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.280" endtime="20220606 08:54:53.280"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.281" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '108'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord01","natid":"G565404FF","salary":"100000","tax":"100"} 
 </msg>
<msg timestamp="20220606 08:54:53.281" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.281" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.280" endtime="20220606 08:54:53.281"/>
</kw>
<msg timestamp="20220606 08:54:53.281" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.281" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.279" endtime="20220606 08:54:53.281"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.281" endtime="20220606 08:54:53.281"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.287" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.272" endtime="20220606 08:54:53.287"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.272" endtime="20220606 08:54:53.287"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.271" endtime="20220606 08:54:53.287"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.270" endtime="20220606 08:54:53.287"/>
</test>
<test id="s1-s3-t2" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC02</arg>
<arg>Verify insert person having birthday field in future date</arg>
<arg>01012025</arg>
<arg>f</arg>
<arg>TestRecord02</arg>
<arg>H1234h00L</arg>
<arg>100000</arg>
<arg>1000</arg>
<arg>500</arg>
<arg>Error</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.287" level="INFO">${data} = {"birthday":"01012025","gender":"f","name":"TestRecord02","natid":"H1234h00L","salary":"100000","tax":"1000"}</msg>
<status status="PASS" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.287"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.294" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.294" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.294" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.294"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.294"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.294" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.294" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body={"birthday":"01012025","gender":"f","name":"TestRecord02","natid":"H1234h00L","salary":"100000","tax":"1000"} 
 </msg>
<msg timestamp="20220606 08:54:53.294" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.294" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<msg timestamp="20220606 08:54:53.294" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.294" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220606 08:54:53.294" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</branch>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.294"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.294" endtime="20220606 08:54:53.294"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.294"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.294"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:53.287" endtime="20220606 08:54:53.294">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s3-t3" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC03</arg>
<arg>Verify insert person having birthday field as BLANK</arg>
<arg>m</arg>
<arg>TestRecord03</arg>
<arg>G565404FF</arg>
<arg>5478665</arg>
<arg>54786.65</arg>
<arg>500</arg>
<arg>Text '' could not be parsed at index 0</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.314" level="INFO">${data} = {"birthday":"","gender":"m","name":"TestRecord03","natid":"G565404FF","salary":"5478665","tax":"54786.65"}</msg>
<status status="PASS" starttime="20220606 08:54:53.313" endtime="20220606 08:54:53.314"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.319" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.319" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.320" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.314" endtime="20220606 08:54:53.320"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.314" endtime="20220606 08:54:53.320"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.320" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.320" endtime="20220606 08:54:53.320"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.328" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body={"birthday":"","gender":"m","name":"TestRecord03","natid":"G565404FF","salary":"5478665","tax":"54786.65"} 
 </msg>
<msg timestamp="20220606 08:54:53.328" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.327+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.328" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.320" endtime="20220606 08:54:53.328"/>
</kw>
<msg timestamp="20220606 08:54:53.330" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.330" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.327+0000","status":500,"error":"Internal Server Error","message":"Text '' could not be parsed at index 0","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.320" endtime="20220606 08:54:53.330"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.330" endtime="20220606 08:54:53.330"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.334" level="INFO">${actual_resp_message} = ["Text '' could not be parsed at index 0"]</msg>
<status status="PASS" starttime="20220606 08:54:53.331" endtime="20220606 08:54:53.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.334" level="INFO">Text '' could not be parsed at index 0</msg>
<status status="PASS" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.334"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.334"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.331" endtime="20220606 08:54:53.334"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.334"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.334"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.330" endtime="20220606 08:54:53.334"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.313" endtime="20220606 08:54:53.334"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.334"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.334"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.313" endtime="20220606 08:54:53.334"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.312" endtime="20220606 08:54:53.334"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.310" endtime="20220606 08:54:53.334"/>
</test>
<test id="s1-s3-t4" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC04</arg>
<arg>Verify insert person having birthday field in incorrect format</arg>
<arg>13132021</arg>
<arg>f</arg>
<arg>TestRecord04</arg>
<arg>M565433KF</arg>
<arg>45512</arg>
<arg>455.12</arg>
<arg>500</arg>
<arg>Text '13132021' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 13</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.350" level="INFO">${data} = {"birthday":"13132021","gender":"f","name":"TestRecord04","natid":"M565433KF","salary":"45512","tax":"455.12"}</msg>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.350"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.350" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.350" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.350" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.350"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.350"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.350" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.350"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.350" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body={"birthday":"13132021","gender":"f","name":"TestRecord04","natid":"M565433KF","salary":"45512","tax":"455.12"} 
 </msg>
<msg timestamp="20220606 08:54:53.350" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.349+0000","status":500,"error":"Internal Server Error","message":"Text '13132021' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 13","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.350" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.350"/>
</kw>
<msg timestamp="20220606 08:54:53.350" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.350" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.349+0000","status":500,"error":"Internal Server Error","message":"Text '13132021' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 13","path"...</msg>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.350"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.363"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.363" level="INFO">${actual_resp_message} = ["Text '13132021' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 13"]</msg>
<status status="PASS" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.363" level="INFO">Text '13132021' could not be parsed: Invalid value for MonthOfYear (valid values 1 - 12): 13</msg>
<status status="PASS" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.350" endtime="20220606 08:54:53.363"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.363" endtime="20220606 08:54:53.363"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.363"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.363"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.334" endtime="20220606 08:54:53.363"/>
</test>
<test id="s1-s3-t5" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC05</arg>
<arg>Verify insert person having birthday field with special characters</arg>
<arg>05-05-2012</arg>
<arg>f</arg>
<arg>TestRecord05</arg>
<arg>B565404FF</arg>
<arg>5457221</arg>
<arg>54572.21</arg>
<arg>500</arg>
<arg>Text '05-05-2012' could not be parsed at index 2</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.380" level="INFO">${data} = {"birthday":"05-05-2012","gender":"f","name":"TestRecord05","natid":"B565404FF","salary":"5457221","tax":"54572.21"}</msg>
<status status="PASS" starttime="20220606 08:54:53.380" endtime="20220606 08:54:53.380"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.380" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.380" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.388" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.380" endtime="20220606 08:54:53.388"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.380" endtime="20220606 08:54:53.388"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.388" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.388" endtime="20220606 08:54:53.388"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.388" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '116'} 
 body={"birthday":"05-05-2012","gender":"f","name":"TestRecord05","natid":"B565404FF","salary":"5457221","tax":"54572.21"} 
 </msg>
<msg timestamp="20220606 08:54:53.388" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.388+0000","status":500,"error":"Internal Server Error","message":"Text '05-05-2012' could not be parsed at index 2","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.388" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.388" endtime="20220606 08:54:53.388"/>
</kw>
<msg timestamp="20220606 08:54:53.388" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.388" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.388+0000","status":500,"error":"Internal Server Error","message":"Text '05-05-2012' could not be parsed at index 2","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.388" endtime="20220606 08:54:53.388"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.388" endtime="20220606 08:54:53.388"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.404" level="INFO">${actual_resp_message} = ["Text '05-05-2012' could not be parsed at index 2"]</msg>
<status status="PASS" starttime="20220606 08:54:53.388" endtime="20220606 08:54:53.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.404" level="INFO">Text '05-05-2012' could not be parsed at index 2</msg>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.404"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.404"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.388" endtime="20220606 08:54:53.404"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.404"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.404"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.388" endtime="20220606 08:54:53.404"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.380" endtime="20220606 08:54:53.404"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.404"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.404"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.380" endtime="20220606 08:54:53.404"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.380" endtime="20220606 08:54:53.404"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.380" endtime="20220606 08:54:53.404"/>
</test>
<test id="s1-s3-t6" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC06</arg>
<arg>Verify insert person having gender field in invalid format</arg>
<arg>13122000</arg>
<arg>female</arg>
<arg>TestRecord06</arg>
<arg>C565455HFD</arg>
<arg>4512852</arg>
<arg>45128.52</arg>
<arg>500</arg>
<arg>could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.404" level="INFO">${data} = {"birthday":"13122000","gender":"female","name":"TestRecord06","natid":"C565455HFD","salary":"4512852","tax":"45128.52"}</msg>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.404"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.421" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.421" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.421" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.420" endtime="20220606 08:54:53.421"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.421"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.421" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.421" endtime="20220606 08:54:53.421"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.436" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '120'} 
 body={"birthday":"13122000","gender":"female","name":"TestRecord06","natid":"C565455HFD","salary":"4512852","tax":"45128.52"} 
 </msg>
<msg timestamp="20220606 08:54:53.436" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.436+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.436" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.421" endtime="20220606 08:54:53.436"/>
</kw>
<msg timestamp="20220606 08:54:53.436" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.436" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.436+0000","status":500,"error":"Internal Server Error","message":"could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: c...</msg>
<status status="PASS" starttime="20220606 08:54:53.421" endtime="20220606 08:54:53.436"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.436" endtime="20220606 08:54:53.436"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.452" level="INFO">${actual_resp_message} = ['could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement']</msg>
<status status="PASS" starttime="20220606 08:54:53.436" endtime="20220606 08:54:53.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.452" level="INFO">could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement</msg>
<status status="PASS" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.452"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.452"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.436" endtime="20220606 08:54:53.452"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.452"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.452"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.436" endtime="20220606 08:54:53.452"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.452"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.452"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.452"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.452"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.452"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.404" endtime="20220606 08:54:53.452"/>
</test>
<test id="s1-s3-t7" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC07</arg>
<arg>Verify insert person having gender field in invalid character</arg>
<arg>13122000</arg>
<arg>n</arg>
<arg>TestRecord07</arg>
<arg>E565400XW</arg>
<arg>4512852</arg>
<arg>45128.52</arg>
<arg>500</arg>
<arg>Error</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.452" level="INFO">${data} = {"birthday":"13122000","gender":"n","name":"TestRecord07","natid":"E565400XW","salary":"4512852","tax":"45128.52"}</msg>
<status status="PASS" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.452"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.468" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.468" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.468" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.468"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.468"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.468" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.468" endtime="20220606 08:54:53.468"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.473" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body={"birthday":"13122000","gender":"n","name":"TestRecord07","natid":"E565400XW","salary":"4512852","tax":"45128.52"} 
 </msg>
<msg timestamp="20220606 08:54:53.473" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.473" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.468" endtime="20220606 08:54:53.473"/>
</kw>
<msg timestamp="20220606 08:54:53.473" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.473" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.468" endtime="20220606 08:54:53.473"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220606 08:54:53.473" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</branch>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.473"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.473"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.473"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:53.452" endtime="20220606 08:54:53.473">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s3-t8" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC08</arg>
<arg>Verify insert person having gender field as Number</arg>
<arg>13122001</arg>
<arg>2</arg>
<arg>TestRecord08</arg>
<arg>D565404FF</arg>
<arg>666666</arg>
<arg>6666.66</arg>
<arg>500</arg>
<arg>Error</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.473" level="INFO">${data} = {"birthday":"13122001","gender":"2","name":"TestRecord08","natid":"D565404FF","salary":"666666","tax":"6666.66"}</msg>
<status status="PASS" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.473"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.489" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.489" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.489" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.489"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.489"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.489" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.489" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"13122001","gender":"2","name":"TestRecord08","natid":"D565404FF","salary":"666666","tax":"6666.66"} 
 </msg>
<msg timestamp="20220606 08:54:53.489" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.489" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<msg timestamp="20220606 08:54:53.489" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.489" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220606 08:54:53.489" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</branch>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.489"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.489"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.489"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.489"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:53.473" endtime="20220606 08:54:53.489">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s3-t9" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC09</arg>
<arg>Verify insert person having gender field as BLANK</arg>
<arg>13122002</arg>
<arg>TestRecord09</arg>
<arg>XZY83444LW</arg>
<arg>898989</arg>
<arg>8989.89</arg>
<arg>500</arg>
<arg>Error</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.506" level="INFO">${data} = {"birthday":"13122002","gender":"","name":"TestRecord09","natid":"XZY83444LW","salary":"898989","tax":"8989.89"}</msg>
<status status="PASS" starttime="20220606 08:54:53.506" endtime="20220606 08:54:53.506"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.513" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.513" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.513" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.506" endtime="20220606 08:54:53.513"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.506" endtime="20220606 08:54:53.513"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.513" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.513" endtime="20220606 08:54:53.513"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.515" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body={"birthday":"13122002","gender":"","name":"TestRecord09","natid":"XZY83444LW","salary":"898989","tax":"8989.89"} 
 </msg>
<msg timestamp="20220606 08:54:53.515" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.515" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.513" endtime="20220606 08:54:53.515"/>
</kw>
<msg timestamp="20220606 08:54:53.515" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.515" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.513" endtime="20220606 08:54:53.515"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220606 08:54:53.515" level="FAIL">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</msg>
<status status="FAIL" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</branch>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.505" endtime="20220606 08:54:53.515"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</branch>
<status status="FAIL" starttime="20220606 08:54:53.505" endtime="20220606 08:54:53.515"/>
</if>
<status status="FAIL" starttime="20220606 08:54:53.504" endtime="20220606 08:54:53.515"/>
</kw>
<tag>YES</tag>
<status status="FAIL" starttime="20220606 08:54:53.489" endtime="20220606 08:54:53.515">Url: http://localhost:8080/calculator/insert Expected status: 202 != 500</status>
</test>
<test id="s1-s3-t10" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC10</arg>
<arg>Verify insert person having name field as BLANK </arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>G565404FF</arg>
<arg>654789321</arg>
<arg>6547893.21</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.515" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"","natid":"G565404FF","salary":"654789321","tax":"6547893.21"}</msg>
<status status="PASS" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.515"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.534" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.534" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.534" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.534"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.534"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.534" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.534" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body={"birthday":"01012010","gender":"f","name":"","natid":"G565404FF","salary":"654789321","tax":"6547893.21"} 
 </msg>
<msg timestamp="20220606 08:54:53.534" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.534" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<msg timestamp="20220606 08:54:53.534" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.534" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.534" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.534"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.534" endtime="20220606 08:54:53.549"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.549"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.549" endtime="20220606 08:54:53.549"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.549" endtime="20220606 08:54:53.550"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.550"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.550"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.515" endtime="20220606 08:54:53.550"/>
</test>
<test id="s1-s3-t11" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC11</arg>
<arg>Verify insert person having name field in number format</arg>
<arg>01012010</arg>
<arg>m</arg>
<arg>3Letters</arg>
<arg>HJU8888I</arg>
<arg>100000</arg>
<arg>1000</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.550" level="INFO">${data} = {"birthday":"01012010","gender":"m","name":"3Letters","natid":"HJU8888I","salary":"100000","tax":"1000"}</msg>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.550"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.550" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.550" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.550" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.550"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.550"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.550" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.550"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.564" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body={"birthday":"01012010","gender":"m","name":"3Letters","natid":"HJU8888I","salary":"100000","tax":"1000"} 
 </msg>
<msg timestamp="20220606 08:54:53.564" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.564" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.564"/>
</kw>
<msg timestamp="20220606 08:54:53.564" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.564" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.564"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.564" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.564"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.564"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.564"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.550" endtime="20220606 08:54:53.564"/>
</test>
<test id="s1-s3-t12" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC12</arg>
<arg>Verify insert person having name field having special characters</arg>
<arg>01012010</arg>
<arg>m</arg>
<arg>Test@gmail.com</arg>
<arg>W565404FF</arg>
<arg>11</arg>
<arg>0.11</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.564" level="INFO">${data} = {"birthday":"01012010","gender":"m","name":"Test@gmail.com","natid":"W565404FF","salary":"11","tax":"0.11"}</msg>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.564" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.564" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.564" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.564" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.564"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.581" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body={"birthday":"01012010","gender":"m","name":"Test@gmail.com","natid":"W565404FF","salary":"11","tax":"0.11"} 
 </msg>
<msg timestamp="20220606 08:54:53.581" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.581" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.581"/>
</kw>
<msg timestamp="20220606 08:54:53.581" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.581" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.581"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.581" endtime="20220606 08:54:53.581"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.581" endtime="20220606 08:54:53.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.587" endtime="20220606 08:54:53.587"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.587" endtime="20220606 08:54:53.587"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.581" endtime="20220606 08:54:53.587"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.587" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.587" endtime="20220606 08:54:53.587"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.587" endtime="20220606 08:54:53.587"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.581" endtime="20220606 08:54:53.587"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.587"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.587" endtime="20220606 08:54:53.587"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.587" endtime="20220606 08:54:53.587"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.587"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.587"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.564" endtime="20220606 08:54:53.587"/>
</test>
<test id="s1-s3-t13" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC13</arg>
<arg>Verify insert person having salary field not Number</arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord13</arg>
<arg>Z565455HFD</arg>
<arg>0</arg>
<arg>500</arg>
<arg>No message available</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.591" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord13","natid":"Z565455HFD","salary":"","tax":"0"}</msg>
<status status="PASS" starttime="20220606 08:54:53.591" endtime="20220606 08:54:53.591"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.596" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.596" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.596" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.591" endtime="20220606 08:54:53.596"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.591" endtime="20220606 08:54:53.596"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.596" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.596" endtime="20220606 08:54:53.596"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.596" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '101'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord13","natid":"Z565455HFD","salary":"","tax":"0"} 
 </msg>
<msg timestamp="20220606 08:54:53.596" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.595+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.596" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.596" endtime="20220606 08:54:53.596"/>
</kw>
<msg timestamp="20220606 08:54:53.596" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.596" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.595+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.596" endtime="20220606 08:54:53.596"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.596" endtime="20220606 08:54:53.596"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.614" level="INFO">${actual_resp_message} = ['No message available']</msg>
<status status="PASS" starttime="20220606 08:54:53.596" endtime="20220606 08:54:53.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.614" level="INFO">No message available</msg>
<status status="PASS" starttime="20220606 08:54:53.614" endtime="20220606 08:54:53.614"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.614" endtime="20220606 08:54:53.614"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.596" endtime="20220606 08:54:53.614"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.614" endtime="20220606 08:54:53.614"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.614" endtime="20220606 08:54:53.614"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.596" endtime="20220606 08:54:53.614"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.591" endtime="20220606 08:54:53.614"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.614" endtime="20220606 08:54:53.614"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.614" endtime="20220606 08:54:53.614"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.591" endtime="20220606 08:54:53.614"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.591" endtime="20220606 08:54:53.614"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.591" endtime="20220606 08:54:53.629"/>
</test>
<test id="s1-s3-t14" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC14</arg>
<arg>Verify insert person having salary field as BLANK </arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord14</arg>
<arg>N565404FF</arg>
<arg>0</arg>
<arg>500</arg>
<arg>No message available</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.629" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord14","natid":"N565404FF","salary":"","tax":"0"}</msg>
<status status="PASS" starttime="20220606 08:54:53.629" endtime="20220606 08:54:53.629"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.635" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.635" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.635" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.629" endtime="20220606 08:54:53.635"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.629" endtime="20220606 08:54:53.635"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.635" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.635" endtime="20220606 08:54:53.635"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.652" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '100'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord14","natid":"N565404FF","salary":"","tax":"0"} 
 </msg>
<msg timestamp="20220606 08:54:53.652" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.650+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.653" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.635" endtime="20220606 08:54:53.653"/>
</kw>
<msg timestamp="20220606 08:54:53.653" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.653" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.650+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.635" endtime="20220606 08:54:53.653"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.653" level="INFO">${actual_resp_message} = ['No message available']</msg>
<status status="PASS" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.653" level="INFO">No message available</msg>
<status status="PASS" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.629" endtime="20220606 08:54:53.653"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.653" endtime="20220606 08:54:53.653"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.629" endtime="20220606 08:54:53.653"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.629" endtime="20220606 08:54:53.653"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.629" endtime="20220606 08:54:53.668"/>
</test>
<test id="s1-s3-t15" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC15</arg>
<arg>Verify insert person having salary field with special characters</arg>
<arg>01012010</arg>
<arg>m</arg>
<arg>TestRecord15</arg>
<arg>XZY83444LW</arg>
<arg>80000$</arg>
<arg>800</arg>
<arg>500</arg>
<arg>No message available</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.668" level="INFO">${data} = {"birthday":"01012010","gender":"m","name":"TestRecord15","natid":"XZY83444LW","salary":"80000$","tax":"800"}</msg>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.668"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.668" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.668" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.668" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.668"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.668"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.668" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.668"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.668" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body={"birthday":"01012010","gender":"m","name":"TestRecord15","natid":"XZY83444LW","salary":"80000$","tax":"800"} 
 </msg>
<msg timestamp="20220606 08:54:53.684" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.668+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.684" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.684"/>
</kw>
<msg timestamp="20220606 08:54:53.684" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.684" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.668+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.684"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.684" endtime="20220606 08:54:53.684"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.687" level="INFO">${actual_resp_message} = ['No message available']</msg>
<status status="PASS" starttime="20220606 08:54:53.684" endtime="20220606 08:54:53.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.687" level="INFO">No message available</msg>
<status status="PASS" starttime="20220606 08:54:53.687" endtime="20220606 08:54:53.687"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.687" endtime="20220606 08:54:53.687"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.684" endtime="20220606 08:54:53.687"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.687" endtime="20220606 08:54:53.687"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.687" endtime="20220606 08:54:53.687"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.684" endtime="20220606 08:54:53.687"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.687"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.687" endtime="20220606 08:54:53.687"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.687" endtime="20220606 08:54:53.687"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.687"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.687"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.668" endtime="20220606 08:54:53.687"/>
</test>
<test id="s1-s3-t16" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC16</arg>
<arg>Verify insert person having tax field not as Number</arg>
<arg>01012010</arg>
<arg>m</arg>
<arg>TestRecord16</arg>
<arg>T565404FF</arg>
<arg>4087445</arg>
<arg>500</arg>
<arg>No message available</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.700" level="INFO">${data} = {"birthday":"01012010","gender":"m","name":"TestRecord16","natid":"T565404FF","salary":"4087445","tax":""}</msg>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.700"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.700" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.700" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.700" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.700"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.700"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.700" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.700"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.700" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '106'} 
 body={"birthday":"01012010","gender":"m","name":"TestRecord16","natid":"T565404FF","salary":"4087445","tax":""} 
 </msg>
<msg timestamp="20220606 08:54:53.700" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.700+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.700" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.700"/>
</kw>
<msg timestamp="20220606 08:54:53.700" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.700" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.700+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.700"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.700"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.716" level="INFO">${actual_resp_message} = ['No message available']</msg>
<status status="PASS" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.716" level="INFO">No message available</msg>
<status status="PASS" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.716"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.716"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.716" endtime="20220606 08:54:53.716"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.716"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.716"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.700" endtime="20220606 08:54:53.716"/>
</test>
<test id="s1-s3-t17" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC17</arg>
<arg>Verify insert person having tax field as BLANK </arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord17</arg>
<arg>HJU8888I</arg>
<arg>100000</arg>
<arg>500</arg>
<arg>No message available</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.731" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord17","natid":"HJU8888I","salary":"100000","tax":""}</msg>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.731"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.731" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.731" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.731" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.731"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.731"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.731" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.731"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.731" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord17","natid":"HJU8888I","salary":"100000","tax":""} 
 </msg>
<msg timestamp="20220606 08:54:53.731" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.731+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.731" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.731"/>
</kw>
<msg timestamp="20220606 08:54:53.747" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.747" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.731+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.747"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.747" level="INFO">${actual_resp_message} = ['No message available']</msg>
<status status="PASS" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.747" level="INFO">No message available</msg>
<status status="PASS" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.747"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.747" endtime="20220606 08:54:53.747"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.747"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.747"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.731" endtime="20220606 08:54:53.747"/>
</test>
<test id="s1-s3-t18" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC18</arg>
<arg>Verify insert person having tax field with special characters</arg>
<arg>01012010</arg>
<arg>m</arg>
<arg>TestRecord18</arg>
<arg>Y565404FF</arg>
<arg>100000</arg>
<arg>345$</arg>
<arg>500</arg>
<arg>No message available</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.763" level="INFO">${data} = {"birthday":"01012010","gender":"m","name":"TestRecord18","natid":"Y565404FF","salary":"100000","tax":"345$"}</msg>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.763"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.763" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.763" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.763" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.763"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.763"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.763" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.763"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.763" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '109'} 
 body={"birthday":"01012010","gender":"m","name":"TestRecord18","natid":"Y565404FF","salary":"100000","tax":"345$"} 
 </msg>
<msg timestamp="20220606 08:54:53.763" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=500, reason= 
 headers={'Content-Type': 'application/json;charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT', 'Connection': 'close'} 
 body={"timestamp":"2022-06-06T00:54:53.762+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"} 
 </msg>
<msg timestamp="20220606 08:54:53.763" level="INFO">${resp_insertPerson} = &lt;Response [500]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.763"/>
</kw>
<msg timestamp="20220606 08:54:53.778" level="INFO">${actual_resp_status_code} = &lt;Response [500]&gt;</msg>
<msg timestamp="20220606 08:54:53.778" level="INFO">${actual_resp_content} = {"timestamp":"2022-06-06T00:54:53.762+0000","status":500,"error":"Internal Server Error","message":"No message available","path":"/calculator/insert"}</msg>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.778"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.778" endtime="20220606 08:54:53.778"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20220606 08:54:53.788" level="INFO">${actual_resp_message} = ['No message available']</msg>
<status status="PASS" starttime="20220606 08:54:53.778" endtime="20220606 08:54:53.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220606 08:54:53.788" level="INFO">No message available</msg>
<status status="PASS" starttime="20220606 08:54:53.788" endtime="20220606 08:54:53.788"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20220606 08:54:53.788" endtime="20220606 08:54:53.788"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.778" endtime="20220606 08:54:53.788"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.788" endtime="20220606 08:54:53.788"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.788" endtime="20220606 08:54:53.788"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.778" endtime="20220606 08:54:53.788"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.788"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.788" endtime="20220606 08:54:53.788"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.788" endtime="20220606 08:54:53.788"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.788"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.788"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.763" endtime="20220606 08:54:53.788"/>
</test>
<test id="s1-s3-t19" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC19</arg>
<arg>Verify insert person having national ID field less than 5 Characters</arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord19</arg>
<arg>A123</arg>
<arg>100000</arg>
<arg>1000</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.795" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord19","natid":"A123","salary":"100000","tax":"1000"}</msg>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.795"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.795" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.795" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.795" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.795"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.795"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.795" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.795"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.795" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '104'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord19","natid":"A123","salary":"100000","tax":"1000"} 
 </msg>
<msg timestamp="20220606 08:54:53.795" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.795" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.795"/>
</kw>
<msg timestamp="20220606 08:54:53.795" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.795" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.795"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.795"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.811" endtime="20220606 08:54:53.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.811" endtime="20220606 08:54:53.811"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.811" endtime="20220606 08:54:53.811"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.811" endtime="20220606 08:54:53.811"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.812" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.811" endtime="20220606 08:54:53.812"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.811" endtime="20220606 08:54:53.812"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.812"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.812"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.812" endtime="20220606 08:54:53.812"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.812" endtime="20220606 08:54:53.812"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.812"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.812"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.795" endtime="20220606 08:54:53.812"/>
</test>
<test id="s1-s3-t20" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC20</arg>
<arg>Verify insert person having national ID field with special characters</arg>
<arg>01012010</arg>
<arg>n</arg>
<arg>TestRecord20</arg>
<arg>G56-5404FF</arg>
<arg>874946</arg>
<arg>8749.46</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.814" level="INFO">${data} = {"birthday":"01012010","gender":"n","name":"TestRecord20","natid":"G56-5404FF","salary":"874946","tax":"8749.46"}</msg>
<status status="PASS" starttime="20220606 08:54:53.814" endtime="20220606 08:54:53.814"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.820" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.820" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.820" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.814" endtime="20220606 08:54:53.820"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.814" endtime="20220606 08:54:53.820"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.820" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.820" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '113'} 
 body={"birthday":"01012010","gender":"n","name":"TestRecord20","natid":"G56-5404FF","salary":"874946","tax":"8749.46"} 
 </msg>
<msg timestamp="20220606 08:54:53.820" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.820" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<msg timestamp="20220606 08:54:53.820" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.820" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.820" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.814" endtime="20220606 08:54:53.820"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.814" endtime="20220606 08:54:53.820"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.814" endtime="20220606 08:54:53.820"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.814" endtime="20220606 08:54:53.820"/>
</test>
<test id="s1-s3-t21" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC21</arg>
<arg>Verify insert person having national ID field with special characters</arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord21</arg>
<arg>KN$204JH</arg>
<arg>7676000</arg>
<arg>76760</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.820" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord21","natid":"KN$204JH","salary":"7676000","tax":"76760"}</msg>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.820"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.837" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.837" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.837" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.837"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.837"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.837" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.837" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord21","natid":"KN$204JH","salary":"7676000","tax":"76760"} 
 </msg>
<msg timestamp="20220606 08:54:53.837" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.837" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<msg timestamp="20220606 08:54:53.837" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.837" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.837" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.837"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.837"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.837"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.820" endtime="20220606 08:54:53.837"/>
</test>
<test id="s1-s3-t22" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC22</arg>
<arg>Verify insert person having national ID field starting with Numbers</arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord22</arg>
<arg>334ABGDEA1</arg>
<arg>647</arg>
<arg>6.47</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.837" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord22","natid":"334ABGDEA1","salary":"647","tax":"6.47"}</msg>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.837"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.852" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.852" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.852" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.852"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.852"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.852" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.852" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '107'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord22","natid":"334ABGDEA1","salary":"647","tax":"6.47"} 
 </msg>
<msg timestamp="20220606 08:54:53.852" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.852" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<msg timestamp="20220606 08:54:53.852" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.852" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.852" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.852"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.852" endtime="20220606 08:54:53.852"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.852"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.852"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.837" endtime="20220606 08:54:53.852"/>
</test>
<test id="s1-s3-t23" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>YES</arg>
<arg>US01_InsertSingleRecord_TC23</arg>
<arg>Verify insert person having national ID field with special characters</arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord23</arg>
<arg>GAO/5404KE</arg>
<arg>800000</arg>
<arg>8000</arg>
<arg>202</arg>
<arg>Alright</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220606 08:54:53.869" level="INFO">${data} = {"birthday":"01012010","gender":"f","name":"TestRecord23","natid":"GAO/5404KE","salary":"800000","tax":"8000"}</msg>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.869"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.869" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:53.869" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:53.869" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.869"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.869"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${headers}</var>
<arg>Content-Type</arg>
<arg>application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220606 08:54:53.869" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.869"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_insertPerson}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/insert</arg>
<arg>headers=${headers}</arg>
<arg>data=${data}</arg>
<arg>expected_status=anything</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:53.869" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body={"birthday":"01012010","gender":"f","name":"TestRecord23","natid":"GAO/5404KE","salary":"800000","tax":"8000"} 
 </msg>
<msg timestamp="20220606 08:54:53.869" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220606 08:54:53.869" level="INFO">${resp_insertPerson} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.869"/>
</kw>
<msg timestamp="20220606 08:54:53.869" level="INFO">${actual_resp_status_code} = &lt;Response [202]&gt;</msg>
<msg timestamp="20220606 08:54:53.869" level="INFO">${actual_resp_content} = Alright</msg>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.869"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.869"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20220606 08:54:53.884" level="INFO">Argument types are:
&lt;class 'str'&gt;
&lt;class 'bytes'&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.884"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.884"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.884"/>
</branch>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.884"/>
</if>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.884"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.869" endtime="20220606 08:54:53.884"/>
</test>
<test id="s1-s3-t24" name="create working class hero functional validation" line="16">
<kw name="create working class hero">
<arg>NO</arg>
<arg>US01_InsertSingleRecord_TC24</arg>
<arg>Verify insert person having national ID  field as BLANK</arg>
<arg>01012010</arg>
<arg>f</arg>
<arg>TestRecord24</arg>
<arg>100000</arg>
<arg>1000</arg>
<arg>500</arg>
<arg>Error</arg>
<if>
<branch type="IF" condition="'${run_tag}' == 'YES'">
<kw name="Set Variable" library="BuiltIn">
<var>${data}</var>
<arg>{"birthday":"${birthday}","gender":"${gender}","name":"${name}","natid":"${natid}","salary":"${salary}","tax":"${tax}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<kw name="Trigger create working class hero API" library="Common_Keywords">
<var>${actual_resp_status_code}</var>
<var>${actual_resp_content}</var>
<arg>${data}</arg>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected_resp_code}</arg>
<arg>${actual_resp_status_code}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<if>
<branch type="IF" condition="'${actual_resp_status_code.status_code}' == '500'">
<kw name="Get Value From Json" library="JSONLibrary">
<var>${actual_resp_message}</var>
<arg>${actual_resp_status_code.json()}</arg>
<arg>$..message</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${actual_resp_message}[0]</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_message}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</branch>
<branch type="ELSE">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${expected_resp_content}</arg>
<arg>${actual_resp_content}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</branch>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</if>
<status status="NOT RUN" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</branch>
<branch type="ELSE">
<kw name="Skip" library="BuiltIn">
<arg>test</arg>
<doc>Skips the rest of the current test.</doc>
<msg timestamp="20220606 08:54:53.888" level="SKIP">test</msg>
<status status="SKIP" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<status status="SKIP" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</branch>
<status status="SKIP" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</if>
<status status="SKIP" starttime="20220606 08:54:53.888" endtime="20220606 08:54:53.888"/>
</kw>
<tag>YES</tag>
<status status="SKIP" starttime="20220606 08:54:53.884" endtime="20220606 08:54:53.888">test</status>
</test>
<status status="FAIL" starttime="20220606 08:54:53.229" endtime="20220606 08:54:53.888"/>
</suite>
<suite id="s1-s4" name="Oppenheimer UI UploadCSVfile" source="R:\pythonProject\Oppenheimer_Test_Automation\Oppenheimer_Test_Automation\testcases\Oppenheimer_UI_UploadCSVfile.robot">
<kw name="Create Session" library="RequestsLibrary" type="SETUP">
<arg>Oppenheimer</arg>
<arg>http://localhost:8080</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220606 08:54:53.994" level="INFO">Creating Session using : alias=Oppenheimer, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220606 08:54:53.994" endtime="20220606 08:54:53.994"/>
</kw>
<test id="s1-s4-t1" name="Validate upload csv with working class heros" line="25">
<kw name="Set Screenshot Directory" library="SeleniumLibrary">
<arg>${OUTPUTDIR}/Screenshots</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" starttime="20220606 08:54:53.994" endtime="20220606 08:54:53.994"/>
</kw>
<kw name="Delete all working class hero" library="Common_Keywords">
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp_rakeDatabase}</var>
<arg>Oppenheimer</arg>
<arg>/calculator/rakeDatabase</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220606 08:54:54.010" level="INFO">POST Request : url=http://localhost:8080/calculator/rakeDatabase 
 path_url=/calculator/rakeDatabase 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220606 08:54:54.010" level="INFO">POST Response : url=http://localhost:8080/calculator/rakeDatabase 
 status=200, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '21', 'Date': 'Mon, 06 Jun 2022 00:54:53 GMT'} 
 body=Successfully raked DB 
 </msg>
<msg timestamp="20220606 08:54:54.010" level="INFO">${resp_rakeDatabase} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220606 08:54:53.994" endtime="20220606 08:54:54.010"/>
</kw>
<status status="PASS" starttime="20220606 08:54:53.994" endtime="20220606 08:54:54.010"/>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${LoginURL}</arg>
<arg>${Browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220606 08:54:54.010" level="INFO">Opening browser 'Chrome' to base url 'http://localhost:8080/'.</msg>
<status status="PASS" starttime="20220606 08:54:54.010" endtime="20220606 08:54:55.441"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220606 08:54:55.442" endtime="20220606 08:54:55.560"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220606 08:54:55.692" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots/selenium-screenshot-4.png"&gt;&lt;img src="Screenshots/selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220606 08:54:55.560" endtime="20220606 08:54:55.692"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220606 08:54:57.718" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20220606 08:54:55.692" endtime="20220606 08:54:57.719"/>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${btn_uploadfile}</arg>
<arg>${testdata_input}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20220606 08:54:57.720" level="INFO">Sending R:\pythonProject\Oppenheimer_Test_Automation\Oppenheimer_Test_Automation\testcases\Upload_50Records.csv to browser.</msg>
<status status="PASS" starttime="20220606 08:54:57.720" endtime="20220606 08:54:57.751"/>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<arg>${btn_Refresh}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20220606 08:54:57.752" level="INFO">Clicking button 'xpath://button[@type='button'][1]'.</msg>
<status status="PASS" starttime="20220606 08:54:57.751" endtime="20220606 08:54:57.801"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220606 08:54:57.967" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots/selenium-screenshot-5.png"&gt;&lt;img src="Screenshots/selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220606 08:54:57.802" endtime="20220606 08:54:57.967"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220606 08:54:59.982" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20220606 08:54:57.968" endtime="20220606 08:54:59.982"/>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<arg>window.scrollTo(0, window.scrollY+20000)</arg>
<doc>Executes the given JavaScript code with possible arguments.</doc>
<msg timestamp="20220606 08:54:59.984" level="INFO">Executing JavaScript:
window.scrollTo(0, window.scrollY+20000)
Without any arguments.</msg>
<status status="PASS" starttime="20220606 08:54:59.983" endtime="20220606 08:54:59.988"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${txt_TotaltaxMsg}</arg>
<arg>£94204404.91 will be dispensed to 50 Working Class Hero/s</arg>
<arg>Text message not displayed as expected</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220606 08:54:59.988" level="INFO">Verifying element 'xpath://p[contains(text(),'Working Class Hero/s')]' contains exact text '£94204404.91 will be dispensed to 50 Working Class Hero/s'.</msg>
<status status="PASS" starttime="20220606 08:54:59.988" endtime="20220606 08:55:00.007"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220606 08:55:00.141" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots/selenium-screenshot-6.png"&gt;&lt;img src="Screenshots/selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220606 08:55:00.008" endtime="20220606 08:55:00.141"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20220606 08:55:02.164" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20220606 08:55:00.141" endtime="20220606 08:55:02.164"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${txt_btnDispense}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220606 08:55:02.165" level="INFO">Clicking element 'xpath://a[text()='Dispense Now']'.</msg>
<status status="PASS" starttime="20220606 08:55:02.165" endtime="20220606 08:55:02.401"/>
</kw>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${txt_dispenseMsg}</arg>
<arg>Cash dispensed</arg>
<arg>Text message not displayed as expected</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220606 08:55:02.402" level="INFO">Verifying element 'xpath://div[contains(text(),'Cash dispensed')]' contains exact text 'Cash dispensed'.</msg>
<status status="PASS" starttime="20220606 08:55:02.402" endtime="20220606 08:55:02.422"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20220606 08:55:02.575" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Screenshots/selenium-screenshot-7.png"&gt;&lt;img src="Screenshots/selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20220606 08:55:02.423" endtime="20220606 08:55:02.575"/>
</kw>
<tag>YES</tag>
<status status="PASS" starttime="20220606 08:54:53.994" endtime="20220606 08:55:02.575"/>
</test>
<doc>File Upload Download in Robot Framework</doc>
<status status="PASS" starttime="20220606 08:54:53.888" endtime="20220606 08:55:02.575"/>
</suite>
<status status="FAIL" starttime="20220606 08:54:50.260" endtime="20220606 08:55:02.580"/>
</suite>
<statistics>
<total>
<stat pass="36" fail="14" skip="1">All Tests</stat>
</total>
<tag>
<stat pass="36" fail="14" skip="1">YES</stat>
</tag>
<suite>
<stat pass="36" fail="14" skip="1" id="s1" name="Oppenheimer">Oppenheimer</stat>
<stat pass="13" fail="10" skip="0" id="s1-s1" name="Oppenheimer API GetTaxRelief">Oppenheimer.Oppenheimer API GetTaxRelief</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Oppenheimer API InsertMultiplePerson">Oppenheimer.Oppenheimer API InsertMultiplePerson</stat>
<stat pass="19" fail="4" skip="1" id="s1-s3" name="Oppenheimer API InsertPerson">Oppenheimer.Oppenheimer API InsertPerson</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Oppenheimer UI UploadCSVfile">Oppenheimer.Oppenheimer UI UploadCSVfile</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20220606 08:54:51.096" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.185" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.276" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.340" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.423" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.485" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.548" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.673" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.734" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.817" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:51.932" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.024" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.144" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.216" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.342" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.443" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.507" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.603" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.686" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.747" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.857" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:52.952" level="WARN">Multiple tests with name 'create working class hero and validate tax relief calculation' executed in suite 'Oppenheimer.Oppenheimer API GetTaxRelief'.</msg>
<msg timestamp="20220606 08:54:53.139" level="WARN">Multiple tests with name 'create more than one working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertMultiplePerson'.</msg>
<msg timestamp="20220606 08:54:53.186" level="WARN">Multiple tests with name 'create more than one working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertMultiplePerson'.</msg>
<msg timestamp="20220606 08:54:53.287" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.294" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.334" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.380" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.404" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.452" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.473" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.489" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.515" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.550" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.564" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.590" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.629" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.668" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.700" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.731" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.763" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.795" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.813" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.820" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.837" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.869" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
<msg timestamp="20220606 08:54:53.884" level="WARN">Multiple tests with name 'create working class hero functional validation' executed in suite 'Oppenheimer.Oppenheimer API InsertPerson'.</msg>
</errors>
</robot>
